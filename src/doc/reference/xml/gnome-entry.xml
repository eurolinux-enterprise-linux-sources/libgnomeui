<refentry id="GnomeEntry">
<refmeta>
<refentrytitle role="top_of_page" id="GnomeEntry.top_of_page">GnomeEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeEntry</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="GnomeEntry.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;

                    <link linkend="GnomeEntryPrivate">GnomeEntryPrivate</link>;
                    <link linkend="GnomeEntry-struct">GnomeEntry</link>;
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-entry-new">gnome_entry_new</link>                     (const <link linkend="gchar">gchar</link> *history_id);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-entry-gtk-entry">gnome_entry_gtk_entry</link>               (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);
const <link linkend="gchar">gchar</link> *       <link linkend="gnome-entry-get-history-id">gnome_entry_get_history_id</link>          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);
<link linkend="void">void</link>                <link linkend="gnome-entry-set-history-id">gnome_entry_set_history_id</link>          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         const <link linkend="gchar">gchar</link> *history_id);
<link linkend="void">void</link>                <link linkend="gnome-entry-set-max-saved">gnome_entry_set_max_saved</link>           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="guint">guint</link> max_saved);
<link linkend="guint">guint</link>               <link linkend="gnome-entry-get-max-saved">gnome_entry_get_max_saved</link>           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);
<link linkend="void">void</link>                <link linkend="gnome-entry-prepend-history">gnome_entry_prepend_history</link>         (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="gboolean">gboolean</link> save,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="gnome-entry-append-history">gnome_entry_append_history</link>          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="gboolean">gboolean</link> save,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="gnome-entry-clear-history">gnome_entry_clear_history</link>           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GnomeEntry.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBox">GtkBox</link>
                                 +----<link linkend="GtkHBox">GtkHBox</link>
                                       +----<link linkend="GtkCombo">GtkCombo</link>
                                             +----GnomeEntry
</synopsis>
</refsect1>



<refsect1 id="GnomeEntry.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GnomeEntry implements
 <link linkend="GtkBuildable">GtkBuildable</link>,  <link linkend="AtkImplementorIface">AtkImplementorIface</link>,  <link linkend="GtkOrientable">GtkOrientable</link> and  <link linkend="GtkEditable">GtkEditable</link>.</para>
</refsect1>


<refsect1 id="GnomeEntry.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GnomeEntry--gtk-entry">gtk-entry</link>&quot;                <link linkend="GtkEntry">GtkEntry</link>*             : Read
  &quot;<link linkend="GnomeEntry--history-id">history-id</link>&quot;               <link linkend="gchar">gchar</link>*                : Read / Write
</synopsis>
</refsect1>

<refsect1 id="GnomeEntry.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GnomeEntry-activate">activate</link>&quot;                                       : Run Last
</synopsis>
</refsect1>


<refsect1 id="GnomeEntry.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="GnomeEntry.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeEntryPrivate" role="struct" condition="deprecated:">
<title>GnomeEntryPrivate</title>
<indexterm zone="GnomeEntryPrivate" role="deprecated"><primary sortas="GnomeEntryPrivate">GnomeEntryPrivate</primary></indexterm><programlisting>typedef struct _GnomeEntryPrivate GnomeEntryPrivate;</programlisting>
<warning><para><literal>GnomeEntryPrivate</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="GnomeEntry-struct" role="struct">
<title>GnomeEntry</title>
<indexterm zone="GnomeEntry-struct" role="deprecated"><primary sortas="GnomeEntry">GnomeEntry</primary></indexterm><programlisting>typedef struct _GnomeEntry GnomeEntry;</programlisting>
<warning><para><literal>GnomeEntry</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="gnome-entry-new" role="function" condition="deprecated:">
<title>gnome_entry_new ()</title>
<indexterm zone="gnome-entry-new" role="deprecated"><primary sortas="gnome_entry_new">gnome_entry_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_entry_new                     (const <link linkend="gchar">gchar</link> *history_id);</programlisting>
<warning><para><literal>gnome_entry_new</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new GnomeEntry widget.  If  <parameter>history_id</parameter> is
not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, then the history list will be saved and restored between
uses under the given id.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>history_id</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, the text id under which history data is stored
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Newly-created GnomeEntry widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-gtk-entry" role="function" condition="deprecated:">
<title>gnome_entry_gtk_entry ()</title>
<indexterm zone="gnome-entry-gtk-entry" role="deprecated"><primary sortas="gnome_entry_gtk_entry">gnome_entry_gtk_entry</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_entry_gtk_entry               (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);</programlisting>
<warning><para><literal>gnome_entry_gtk_entry</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Obtain pointer to GnomeEntry's internal text entry</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Pointer to GtkEntry widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-get-history-id" role="function" condition="deprecated:">
<title>gnome_entry_get_history_id ()</title>
<indexterm zone="gnome-entry-get-history-id" role="deprecated"><primary sortas="gnome_entry_get_history_id">gnome_entry_get_history_id</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gnome_entry_get_history_id          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);</programlisting>
<warning><para><literal>gnome_entry_get_history_id</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns the current history id of the GnomeEntry widget.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The current history id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-set-history-id" role="function" condition="deprecated:">
<title>gnome_entry_set_history_id ()</title>
<indexterm zone="gnome-entry-set-history-id" role="deprecated"><primary sortas="gnome_entry_set_history_id">gnome_entry_set_history_id</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_entry_set_history_id          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         const <link linkend="gchar">gchar</link> *history_id);</programlisting>
<warning><para><literal>gnome_entry_set_history_id</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Set the id of the history list. This function cannot be
used to change and already existing id.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>history_id</parameter>&#160;:</term>
<listitem><simpara> the text id under which history data is stored
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-set-max-saved" role="function" condition="deprecated:">
<title>gnome_entry_set_max_saved ()</title>
<indexterm zone="gnome-entry-set-max-saved" role="deprecated"><primary sortas="gnome_entry_set_max_saved">gnome_entry_set_max_saved</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_entry_set_max_saved           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="guint">guint</link> max_saved);</programlisting>
<warning><para><literal>gnome_entry_set_max_saved</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Set internal limit on number of history items saved
to the config file.
Zero is an acceptable value for <parameter>max_saved</parameter>, but the same thing is
accomplished by setting the history id of <parameter>gentry</parameter> to <link linkend="NULL--CAPS"><literal>NULL</literal></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_saved</parameter>&#160;:</term>
<listitem><simpara> Maximum number of history items to save
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-get-max-saved" role="function" condition="deprecated:">
<title>gnome_entry_get_max_saved ()</title>
<indexterm zone="gnome-entry-get-max-saved" role="deprecated"><primary sortas="gnome_entry_get_max_saved">gnome_entry_get_max_saved</primary></indexterm><programlisting><link linkend="guint">guint</link>               gnome_entry_get_max_saved           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);</programlisting>
<warning><para><literal>gnome_entry_get_max_saved</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Get internal limit on number of history items saved
to the config file
See #<link linkend="gnome-entry-set-max-saved"><function>gnome_entry_set_max_saved()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An unsigned integer
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-prepend-history" role="function" condition="deprecated:">
<title>gnome_entry_prepend_history ()</title>
<indexterm zone="gnome-entry-prepend-history" role="deprecated"><primary sortas="gnome_entry_prepend_history">gnome_entry_prepend_history</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_entry_prepend_history         (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="gboolean">gboolean</link> save,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<warning><para><literal>gnome_entry_prepend_history</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a history item of the given <parameter>text</parameter> to the head of
the history list inside <parameter>gentry</parameter>.  If <parameter>save</parameter> is <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, the history
item will be saved in the config file (assuming that <parameter>gentry</parameter>'s
history id is not <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
Duplicates are automatically removed from the history list.
The history list is automatically saved if needed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>save</parameter>&#160;:</term>
<listitem><simpara> If <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, history entry will be saved to config file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&#160;:</term>
<listitem><simpara> Text to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-append-history" role="function" condition="deprecated:">
<title>gnome_entry_append_history ()</title>
<indexterm zone="gnome-entry-append-history" role="deprecated"><primary sortas="gnome_entry_append_history">gnome_entry_append_history</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_entry_append_history          (<link linkend="GnomeEntry">GnomeEntry</link> *gentry,
                                                         <link linkend="gboolean">gboolean</link> save,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<warning><para><literal>gnome_entry_append_history</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a history item of the given <parameter>text</parameter> to the tail
of the history list inside <parameter>gentry</parameter>.  If <parameter>save</parameter> is <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, the
history item will be saved in the config file (assuming that
<parameter>gentry</parameter>'s history id is not <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
Duplicates are automatically removed from the history list.
The history list is automatically saved if needed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>save</parameter>&#160;:</term>
<listitem><simpara> If <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, history entry will be saved to config file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&#160;:</term>
<listitem><simpara> Text to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-entry-clear-history" role="function" condition="deprecated:">
<title>gnome_entry_clear_history ()</title>
<indexterm zone="gnome-entry-clear-history" role="deprecated"><primary sortas="gnome_entry_clear_history">gnome_entry_clear_history</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_entry_clear_history           (<link linkend="GnomeEntry">GnomeEntry</link> *gentry);</programlisting>
<warning><para><literal>gnome_entry_clear_history</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Clears the history.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gentry</parameter>&#160;:</term>
<listitem><simpara> Pointer to GnomeEntry object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="GnomeEntry.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GnomeEntry--gtk-entry" role="property"><title>The <literal>&quot;gtk-entry&quot;</literal> property</title>
<indexterm zone="GnomeEntry--gtk-entry"><primary sortas="GnomeEntry:gtk-entry">GnomeEntry:gtk-entry</primary></indexterm><programlisting>  &quot;gtk-entry&quot;                <link linkend="GtkEntry">GtkEntry</link>*             : Read</programlisting>
<para>The GTK entry.</para></refsect2>
<refsect2 id="GnomeEntry--history-id" role="property"><title>The <literal>&quot;history-id&quot;</literal> property</title>
<indexterm zone="GnomeEntry--history-id"><primary sortas="GnomeEntry:history-id">GnomeEntry:history-id</primary></indexterm><programlisting>  &quot;history-id&quot;               <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>History ID.</para><para>Default value: NULL</para>
</refsect2>
</refsect1>

<refsect1 id="GnomeEntry.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GnomeEntry-activate" role="signal"><title>The <literal>&quot;activate&quot;</literal> signal</title>
<indexterm zone="GnomeEntry-activate"><primary sortas="GnomeEntry::activate">GnomeEntry::activate</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeEntry">GnomeEntry</link> *entry,
                                                        <link linkend="gpointer">gpointer</link>    user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
