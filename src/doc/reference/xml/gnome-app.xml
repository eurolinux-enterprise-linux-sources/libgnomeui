<refentry id="GnomeApp">
<refmeta>
<refentrytitle role="top_of_page" id="GnomeApp.top_of_page">GnomeApp</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeApp</refname>
<refpurpose>The main application widget.</refpurpose>
</refnamediv>

<refsynopsisdiv id="GnomeApp.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;

#define             <link linkend="GNOME-APP-MENUBAR-NAME--CAPS">GNOME_APP_MENUBAR_NAME</link>
#define             <link linkend="GNOME-APP-TOOLBAR-NAME--CAPS">GNOME_APP_TOOLBAR_NAME</link>
                    <link linkend="GnomeApp-struct">GnomeApp</link>;
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-app-new">gnome_app_new</link>                       (const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);
<link linkend="void">void</link>                <link linkend="gnome-app-construct">gnome_app_construct</link>                 (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);
<link linkend="void">void</link>                <link linkend="gnome-app-set-menus">gnome_app_set_menus</link>                 (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkMenuBar">GtkMenuBar</link> *menubar);
<link linkend="void">void</link>                <link linkend="gnome-app-set-toolbar">gnome_app_set_toolbar</link>               (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
<link linkend="void">void</link>                <link linkend="gnome-app-set-statusbar">gnome_app_set_statusbar</link>             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *statusbar);
<link linkend="void">void</link>                <link linkend="gnome-app-set-statusbar-custom">gnome_app_set_statusbar_custom</link>      (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *container,
                                                         <link linkend="GtkWidget">GtkWidget</link> *statusbar);
<link linkend="void">void</link>                <link linkend="gnome-app-set-contents">gnome_app_set_contents</link>              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *contents);
<link linkend="void">void</link>                <link linkend="gnome-app-add-toolbar">gnome_app_add_toolbar</link>               (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-app-add-docked">gnome_app_add_docked</link>                (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);
<link linkend="void">void</link>                <link linkend="gnome-app-add-dock-item">gnome_app_add_dock_item</link>             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="BonoboDockItem">BonoboDockItem</link> *item,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);
<link linkend="void">void</link>                <link linkend="gnome-app-enable-layout-config">gnome_app_enable_layout_config</link>      (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="gboolean">gboolean</link> enable);
<link linkend="BonoboDock">BonoboDock</link> *        <link linkend="gnome-app-get-dock">gnome_app_get_dock</link>                  (<link linkend="GnomeApp">GnomeApp</link> *app);
<link linkend="BonoboDockItem">BonoboDockItem</link> *    <link linkend="gnome-app-get-dock-item-by-name">gnome_app_get_dock_item_by_name</link>     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *name);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GnomeApp.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBin">GtkBin</link>
                                 +----<link linkend="GtkWindow">GtkWindow</link>
                                       +----GnomeApp
</synopsis>
</refsect1>



<refsect1 id="GnomeApp.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GnomeApp implements
 <link linkend="GtkBuildable">GtkBuildable</link> and  <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>
</refsect1>


<refsect1 id="GnomeApp.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GnomeApp--app-id">app-id</link>&quot;                   <link linkend="gchar">gchar</link>*                : Read / Write / Construct
</synopsis>
</refsect1>



<refsect1 id="GnomeApp.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <parameter>GnomeApp</parameter> widget and associated functions provides the easiest way to
create an almost complete GNOME application in libgnomeui. Simple create an
instance of the widget, append any menus, toolbar(s) and a status bar, as
required (this will probably be done with some functions from the following
pages). Then fill in the main contents with a call to <link linkend="gnome-app-set-contents"><function>gnome_app_set_contents()</function></link>
and start the main loop (with <link linkend="gtk-main"><function>gtk_main()</function></link>).
</para>
</refsect1>

<refsect1 id="GnomeApp.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GNOME-APP-MENUBAR-NAME--CAPS" role="macro">
<title>GNOME_APP_MENUBAR_NAME</title>
<indexterm zone="GNOME-APP-MENUBAR-NAME--CAPS"><primary sortas="GNOME_APP_MENUBAR_NAME">GNOME_APP_MENUBAR_NAME</primary></indexterm><programlisting>#define GNOME_APP_MENUBAR_NAME "Menubar"
</programlisting>
<para>
The name of the menubar as it is passed to libbonobo.
</para></refsect2>
<refsect2 id="GNOME-APP-TOOLBAR-NAME--CAPS" role="macro">
<title>GNOME_APP_TOOLBAR_NAME</title>
<indexterm zone="GNOME-APP-TOOLBAR-NAME--CAPS"><primary sortas="GNOME_APP_TOOLBAR_NAME">GNOME_APP_TOOLBAR_NAME</primary></indexterm><programlisting>#define GNOME_APP_TOOLBAR_NAME "Toolbar"
</programlisting>
<para>
The name of the default toolbar that is added to the application widget by
default.
</para></refsect2>
<refsect2 id="GnomeApp-struct" role="struct">
<title>GnomeApp</title>
<indexterm zone="GnomeApp-struct"><primary sortas="GnomeApp">GnomeApp</primary></indexterm><programlisting>typedef struct _GnomeApp GnomeApp;</programlisting>
<para>
A widget representing an entire GNOME application, including the main window,
menus, toolbar(s) and status bar.
</para></refsect2>
<refsect2 id="gnome-app-new" role="function">
<title>gnome_app_new ()</title>
<indexterm zone="gnome-app-new"><primary sortas="gnome_app_new">gnome_app_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_app_new                       (const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);</programlisting>
<para>
Create a new (empty) application window. You must specify the <parameter>appname</parameter> (used
internally as an identifier).  The <parameter>title</parameter> param can be left as NULL, in
which case the window's title will not be set.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>appname</parameter>&#160;:</term>
<listitem><simpara> Name of program, used in file names and paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> Window title for application.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Pointer to new <link linkend="GnomeApp"><type>GnomeApp</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-construct" role="function">
<title>gnome_app_construct ()</title>
<indexterm zone="gnome-app-construct"><primary sortas="gnome_app_construct">gnome_app_construct</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_construct                 (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);</programlisting>
<para>
Constructor for language bindings; you don't normally need this.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A newly created <link linkend="GnomeApp"><type>GnomeApp</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>appname</parameter>&#160;:</term>
<listitem><simpara> Name of program, using in file names and paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> Window title for application.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-set-menus" role="function">
<title>gnome_app_set_menus ()</title>
<indexterm zone="gnome-app-set-menus"><primary sortas="gnome_app_set_menus">gnome_app_set_menus</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_set_menus                 (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkMenuBar">GtkMenuBar</link> *menubar);</programlisting>
<para>
Sets the menu bar of the application window.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menubar</parameter>&#160;:</term>
<listitem><simpara> Menu bar widget for main application window.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-set-toolbar" role="function">
<title>gnome_app_set_toolbar ()</title>
<indexterm zone="gnome-app-set-toolbar"><primary sortas="gnome_app_set_toolbar">gnome_app_set_toolbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_set_toolbar               (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Sets the main toolbar of the application window.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> Toolbar widget for main app window.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-set-statusbar" role="function">
<title>gnome_app_set_statusbar ()</title>
<indexterm zone="gnome-app-set-statusbar"><primary sortas="gnome_app_set_statusbar">gnome_app_set_statusbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_set_statusbar             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *statusbar);</programlisting>
<para>
Sets the status bar of the application window.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>statusbar</parameter>&#160;:</term>
<listitem><simpara> Statusbar widget for main app window
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-set-statusbar-custom" role="function">
<title>gnome_app_set_statusbar_custom ()</title>
<indexterm zone="gnome-app-set-statusbar-custom"><primary sortas="gnome_app_set_statusbar_custom">gnome_app_set_statusbar_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_set_statusbar_custom      (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *container,
                                                         <link linkend="GtkWidget">GtkWidget</link> *statusbar);</programlisting>
<para>
Sets the status bar of the application window, but use <parameter>container</parameter>
as its container.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>container</parameter>&#160;:</term>
<listitem><simpara> container widget containing the statusbar
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>statusbar</parameter>&#160;:</term>
<listitem><simpara> Statusbar widget for main app window
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-set-contents" role="function">
<title>gnome_app_set_contents ()</title>
<indexterm zone="gnome-app-set-contents"><primary sortas="gnome_app_set_contents">gnome_app_set_contents</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_set_contents              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *contents);</programlisting>
<para>
Sets the content area of the main window of <parameter>app</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contents</parameter>&#160;:</term>
<listitem><simpara> Widget to be application content area.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-add-toolbar" role="function">
<title>gnome_app_add_toolbar ()</title>
<indexterm zone="gnome-app-add-toolbar"><primary sortas="gnome_app_add_toolbar">gnome_app_add_toolbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_add_toolbar               (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);</programlisting>
<para>
Create a new <link linkend="BonoboDockItem"><type>BonoboDockItem</type></link> widget containing <parameter>toolbar</parameter>, and add it
to <parameter>app</parameter>'s dock with the specified layout information.  Notice that,
if automatic layout configuration is enabled, the layout is
overridden by the saved configuration, if any.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> Toolbar to be added to <parameter>app</parameter>'s dock
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> Name for the dock item that will contain <parameter>toolbar</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>behavior</parameter>&#160;:</term>
<listitem><simpara> Behavior for the new dock item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>placement</parameter>&#160;:</term>
<listitem><simpara> Placement for the new dock item
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_num</parameter>&#160;:</term>
<listitem><simpara> Number of the band where the dock item should be placed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_position</parameter>&#160;:</term>
<listitem><simpara> Position of the new dock item in band <parameter>band_num</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&#160;:</term>
<listitem><simpara> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-add-docked" role="function">
<title>gnome_app_add_docked ()</title>
<indexterm zone="gnome-app-add-docked"><primary sortas="gnome_app_add_docked">gnome_app_add_docked</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_app_add_docked                (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);</programlisting>
<para>
Add <parameter>widget</parameter> as a dock item according to the specified layout
information.  Notice that, if automatic layout configuration is
enabled, the layout is overridden by the saved configuration, if
any.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> Widget to be added to the <link linkend="GnomeApp"><type>GnomeApp</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> Name for the new dock item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>behavior</parameter>&#160;:</term>
<listitem><simpara> Behavior for the new dock item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>placement</parameter>&#160;:</term>
<listitem><simpara> Placement for the new dock item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_num</parameter>&#160;:</term>
<listitem><simpara> Number of the band where the dock item should be placed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_position</parameter>&#160;:</term>
<listitem><simpara> Position of the new dock item in band <parameter>band_num</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&#160;:</term>
<listitem><simpara> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The dock item used to contain the widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-add-dock-item" role="function">
<title>gnome_app_add_dock_item ()</title>
<indexterm zone="gnome-app-add-dock-item"><primary sortas="gnome_app_add_dock_item">gnome_app_add_dock_item</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_add_dock_item             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="BonoboDockItem">BonoboDockItem</link> *item,
                                                         <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                                         <link linkend="gint">gint</link> band_num,
                                                         <link linkend="gint">gint</link> band_position,
                                                         <link linkend="gint">gint</link> offset);</programlisting>
<para>
Add <parameter>item</parameter> according to the specified layout information.  Notice
that, if automatic layout configuration is enabled, the layout is
overridden by the saved configuration, if any.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&#160;:</term>
<listitem><simpara> Dock item to be added to <parameter>app</parameter>'s dock.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>placement</parameter>&#160;:</term>
<listitem><simpara> Placement for the dock item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_num</parameter>&#160;:</term>
<listitem><simpara> Number of the band where the dock item should be placed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>band_position</parameter>&#160;:</term>
<listitem><simpara> Position of the dock item in band <parameter>band_num</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&#160;:</term>
<listitem><simpara> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-enable-layout-config" role="function">
<title>gnome_app_enable_layout_config ()</title>
<indexterm zone="gnome-app-enable-layout-config"><primary sortas="gnome_app_enable_layout_config">gnome_app_enable_layout_config</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_enable_layout_config      (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="gboolean">gboolean</link> enable);</programlisting>
<para>
Specify whether <parameter>app</parameter> should automatically save the dock's
layout configuration via gnome-config whenever it changes or not.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable</parameter>&#160;:</term>
<listitem><simpara> Boolean specifying whether automatic configuration saving
is enabled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-get-dock" role="function">
<title>gnome_app_get_dock ()</title>
<indexterm zone="gnome-app-get-dock"><primary sortas="gnome_app_get_dock">gnome_app_get_dock</primary></indexterm><programlisting><link linkend="BonoboDock">BonoboDock</link> *        gnome_app_get_dock                  (<link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<para>
Retrieves the <link linkend="BonoboDock"><type>BonoboDock</type></link> widget contained in <parameter>app</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The relevant <link linkend="BonoboDock"><type>BonoboDock</type></link> widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-get-dock-item-by-name" role="function">
<title>gnome_app_get_dock_item_by_name ()</title>
<indexterm zone="gnome-app-get-dock-item-by-name"><primary sortas="gnome_app_get_dock_item_by_name">gnome_app_get_dock_item_by_name</primary></indexterm><programlisting><link linkend="BonoboDockItem">BonoboDockItem</link> *    gnome_app_get_dock_item_by_name     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Retrieve the dock item whose name matches <parameter>name</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> widget.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> Name of the dock item to retrieve.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The retrieved dock item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="GnomeApp.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GnomeApp--app-id" role="property"><title>The <literal>&quot;app-id&quot;</literal> property</title>
<indexterm zone="GnomeApp--app-id"><primary sortas="GnomeApp:app-id">GnomeApp:app-id</primary></indexterm><programlisting>  &quot;app-id&quot;                   <link linkend="gchar">gchar</link>*                : Read / Write / Construct</programlisting>
<para>The application ID string.</para><para>Default value: NULL</para>
</refsect2>
</refsect1>




</refentry>
