<refentry id="GnomeIconEntry">
<refmeta>
<refentrytitle role="top_of_page" id="GnomeIconEntry.top_of_page">GnomeIconEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeIconEntry</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="GnomeIconEntry.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;

                    <link linkend="GnomeIconEntryPrivate">GnomeIconEntryPrivate</link>;
                    <link linkend="GnomeIconEntry-struct">GnomeIconEntry</link>;
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-icon-entry-new">gnome_icon_entry_new</link>                (const <link linkend="gchar">gchar</link> *history_id,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-construct">gnome_icon_entry_construct</link>          (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *history_id,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-set-pixmap-subdir">gnome_icon_entry_set_pixmap_subdir</link>  (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *subdir);
<link linkend="gchar">gchar</link> *             <link linkend="gnome-icon-entry-get-filename">gnome_icon_entry_get_filename</link>       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="gboolean">gboolean</link>            <link linkend="gnome-icon-entry-set-filename">gnome_icon_entry_set_filename</link>       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *filename);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-set-browse-dialog-title">gnome_icon_entry_set_browse_dialog_title</link>
                                                        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-set-history-id">gnome_icon_entry_set_history_id</link>     (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *history_id);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-set-max-saved">gnome_icon_entry_set_max_saved</link>      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         <link linkend="guint">guint</link> max_saved);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-icon-entry-pick-dialog">gnome_icon_entry_pick_dialog</link>        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="void">void</link>                <link linkend="gnome-icon-entry-set-icon">gnome_icon_entry_set_icon</link>           (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *filename);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-icon-entry-gnome-file-entry">gnome_icon_entry_gnome_file_entry</link>   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-icon-entry-gnome-entry">gnome_icon_entry_gnome_entry</link>        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-icon-entry-gtk-entry">gnome_icon_entry_gtk_entry</link>          (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GnomeIconEntry.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkContainer">GtkContainer</link>
                           +----<link linkend="GtkBox">GtkBox</link>
                                 +----<link linkend="GtkVBox">GtkVBox</link>
                                       +----GnomeIconEntry
</synopsis>
</refsect1>



<refsect1 id="GnomeIconEntry.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GnomeIconEntry implements
 <link linkend="GtkBuildable">GtkBuildable</link>,  <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkOrientable">GtkOrientable</link>.</para>
</refsect1>


<refsect1 id="GnomeIconEntry.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="GnomeIconEntry--browse-dialog-title">browse-dialog-title</link>&quot;      <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="GnomeIconEntry--filename">filename</link>&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="GnomeIconEntry--history-id">history-id</link>&quot;               <link linkend="gchar">gchar</link>*                : Read / Write
  &quot;<link linkend="GnomeIconEntry--pick-dialog">pick-dialog</link>&quot;              <link linkend="GtkDialog">GtkDialog</link>*            : Read
  &quot;<link linkend="GnomeIconEntry--pixmap-subdir">pixmap-subdir</link>&quot;            <link linkend="gchar">gchar</link>*                : Read / Write
</synopsis>
</refsect1>

<refsect1 id="GnomeIconEntry.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GnomeIconEntry-browse">browse</link>&quot;                                         : Run Last
  &quot;<link linkend="GnomeIconEntry-changed">changed</link>&quot;                                        : Run Last
</synopsis>
</refsect1>


<refsect1 id="GnomeIconEntry.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="GnomeIconEntry.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeIconEntryPrivate" role="struct">
<title>GnomeIconEntryPrivate</title>
<indexterm zone="GnomeIconEntryPrivate"><primary sortas="GnomeIconEntryPrivate">GnomeIconEntryPrivate</primary></indexterm><programlisting>typedef struct _GnomeIconEntryPrivate GnomeIconEntryPrivate;</programlisting>
<para>
</para></refsect2>
<refsect2 id="GnomeIconEntry-struct" role="struct">
<title>GnomeIconEntry</title>
<indexterm zone="GnomeIconEntry-struct"><primary sortas="GnomeIconEntry">GnomeIconEntry</primary></indexterm><programlisting>typedef struct _GnomeIconEntry GnomeIconEntry;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnome-icon-entry-new" role="function">
<title>gnome_icon_entry_new ()</title>
<indexterm zone="gnome-icon-entry-new"><primary sortas="gnome_icon_entry_new">gnome_icon_entry_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_icon_entry_new                (const <link linkend="gchar">gchar</link> *history_id,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
Creates a new icon entry widget</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>history_id</parameter>&#160;:</term>
<listitem><simpara> the id given to <link linkend="gnome-entry-new"><type>gnome_entry_new</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>browse_dialog_title</parameter>&#160;:</term>
<listitem><simpara> title of the browse dialog and icon selection dialog
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns the new object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-construct" role="function">
<title>gnome_icon_entry_construct ()</title>
<indexterm zone="gnome-icon-entry-construct"><primary sortas="gnome_icon_entry_construct">gnome_icon_entry_construct</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_construct          (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *history_id,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
For language bindings and subclassing, from C use
<link linkend="gnome-icon-entry-new"><type>gnome_icon_entry_new</type></link></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>history_id</parameter>&#160;:</term>
<listitem><simpara> the id given to <link linkend="gnome-entry-new"><type>gnome_entry_new</type></link> in the browse dialog
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>browse_dialog_title</parameter>&#160;:</term>
<listitem><simpara> title of the icon selection dialog
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-pixmap-subdir" role="function">
<title>gnome_icon_entry_set_pixmap_subdir ()</title>
<indexterm zone="gnome-icon-entry-set-pixmap-subdir"><primary sortas="gnome_icon_entry_set_pixmap_subdir">gnome_icon_entry_set_pixmap_subdir</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_set_pixmap_subdir  (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *subdir);</programlisting>
<para>
Sets the subdirectory below gnome's default
pixmap directory to use as the default path for the file
entry.  The path can also be an absolute one.  If <link linkend="NULL--CAPS"><literal>NULL</literal></link> is passed
then the pixmap directory itself is used.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subdir</parameter>&#160;:</term>
<listitem><simpara> subdirectory
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-get-filename" role="function">
<title>gnome_icon_entry_get_filename ()</title>
<indexterm zone="gnome-icon-entry-get-filename"><primary sortas="gnome_icon_entry_get_filename">gnome_icon_entry_get_filename</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             gnome_icon_entry_get_filename       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Gets the file name of the image if it was possible
to load it into the preview. That is, it will only return a filename
if the image exists and it was possible to load it as an image.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a newly allocated string with the path or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if it
couldn't load the file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-filename" role="function">
<title>gnome_icon_entry_set_filename ()</title>
<indexterm zone="gnome-icon-entry-set-filename"><primary sortas="gnome_icon_entry_set_filename">gnome_icon_entry_set_filename</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnome_icon_entry_set_filename       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Sets the icon of GnomeIconEntry to be the one pointed to by
<parameter>filename</parameter> (in the current subdirectory).</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> a filename
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if icon was loaded ok, <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-browse-dialog-title" role="function">
<title>gnome_icon_entry_set_browse_dialog_title ()</title>
<indexterm zone="gnome-icon-entry-set-browse-dialog-title"><primary sortas="gnome_icon_entry_set_browse_dialog_title">gnome_icon_entry_set_browse_dialog_title</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_set_browse_dialog_title
                                                        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
Set the title of the browse dialog.  It will not effect
an existing dialog.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>browse_dialog_title</parameter>&#160;:</term>
<listitem><simpara> title of the icon selection dialog
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-history-id" role="function">
<title>gnome_icon_entry_set_history_id ()</title>
<indexterm zone="gnome-icon-entry-set-history-id"><primary sortas="gnome_icon_entry_set_history_id">gnome_icon_entry_set_history_id</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_set_history_id     (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *history_id);</programlisting>
<para>
Set the history_id of the entry in the browse dialog
and reload the history</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>history_id</parameter>&#160;:</term>
<listitem><simpara> the id given to <link linkend="gnome-entry-new"><type>gnome_entry_new</type></link> in the browse dialog
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-max-saved" role="function" condition="since:2.4">
<title>gnome_icon_entry_set_max_saved ()</title>
<indexterm zone="gnome-icon-entry-set-max-saved" role="2.4"><primary sortas="gnome_icon_entry_set_max_saved">gnome_icon_entry_set_max_saved</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_set_max_saved      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         <link linkend="guint">guint</link> max_saved);</programlisting>
<para>
Set the max_saved of the entry in the browse dialog</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_saved</parameter>&#160;:</term>
<listitem><simpara> the maximum number of saved entries
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gnome-icon-entry-pick-dialog" role="function">
<title>gnome_icon_entry_pick_dialog ()</title>
<indexterm zone="gnome-icon-entry-pick-dialog"><primary sortas="gnome_icon_entry_pick_dialog">gnome_icon_entry_pick_dialog</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_icon_entry_pick_dialog        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
If a pick dialog exists, return a pointer to it or
return NULL.  This is if you need to do something with all dialogs.
You would use the browse signal with connect_after to get the
pick dialog when it is displayed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The pick dialog or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if none exists
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-set-icon" role="function">
<title>gnome_icon_entry_set_icon ()</title>
<indexterm zone="gnome-icon-entry-set-icon"><primary sortas="gnome_icon_entry_set_icon">gnome_icon_entry_set_icon</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_icon_entry_set_icon           (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                                         const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Deprecated in favour of <link linkend="gnome-icon-entry-set-filename"><type>gnome_icon_entry_set_filename</type></link></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara> a filename
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-gnome-file-entry" role="function">
<title>gnome_icon_entry_gnome_file_entry ()</title>
<indexterm zone="gnome-icon-entry-gnome-file-entry"><primary sortas="gnome_icon_entry_gnome_file_entry">gnome_icon_entry_gnome_file_entry</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_icon_entry_gnome_file_entry   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GnomeFileEntry widget that's part of the entry
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns GnomeFileEntry widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-gnome-entry" role="function">
<title>gnome_icon_entry_gnome_entry ()</title>
<indexterm zone="gnome-icon-entry-gnome-entry"><primary sortas="gnome_icon_entry_gnome_entry">gnome_icon_entry_gnome_entry</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_icon_entry_gnome_entry        (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GnomeEntry widget that's part of the entry
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns GnomeEntry widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-icon-entry-gtk-entry" role="function">
<title>gnome_icon_entry_gtk_entry ()</title>
<indexterm zone="gnome-icon-entry-gtk-entry"><primary sortas="gnome_icon_entry_gtk_entry">gnome_icon_entry_gtk_entry</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_icon_entry_gtk_entry          (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GtkEntry widget that's part of the entry.
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ientry</parameter>&#160;:</term>
<listitem><simpara> the GnomeIconEntry to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Returns GtkEntry widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="GnomeIconEntry.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GnomeIconEntry--browse-dialog-title" role="property"><title>The <literal>&quot;browse-dialog-title&quot;</literal> property</title>
<indexterm zone="GnomeIconEntry--browse-dialog-title"><primary sortas="GnomeIconEntry:browse-dialog-title">GnomeIconEntry:browse-dialog-title</primary></indexterm><programlisting>  &quot;browse-dialog-title&quot;      <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>Title for the Browse icon dialog.</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="GnomeIconEntry--filename" role="property"><title>The <literal>&quot;filename&quot;</literal> property</title>
<indexterm zone="GnomeIconEntry--filename"><primary sortas="GnomeIconEntry:filename">GnomeIconEntry:filename</primary></indexterm><programlisting>  &quot;filename&quot;                 <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>Filename that should be displayed in the icon entry.</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="GnomeIconEntry--history-id" role="property"><title>The <literal>&quot;history-id&quot;</literal> property</title>
<indexterm zone="GnomeIconEntry--history-id"><primary sortas="GnomeIconEntry:history-id">GnomeIconEntry:history-id</primary></indexterm><programlisting>  &quot;history-id&quot;               <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>Unique identifier for the icon entry.  This will be used to save the history list.</para><para>Default value: NULL</para>
</refsect2>
<refsect2 id="GnomeIconEntry--pick-dialog" role="property"><title>The <literal>&quot;pick-dialog&quot;</literal> property</title>
<indexterm zone="GnomeIconEntry--pick-dialog"><primary sortas="GnomeIconEntry:pick-dialog">GnomeIconEntry:pick-dialog</primary></indexterm><programlisting>  &quot;pick-dialog&quot;              <link linkend="GtkDialog">GtkDialog</link>*            : Read</programlisting>
<para>Icon picker dialog.  You can use this property to get the GtkDialog if you need to modify or query any of its properties.</para></refsect2>
<refsect2 id="GnomeIconEntry--pixmap-subdir" role="property"><title>The <literal>&quot;pixmap-subdir&quot;</literal> property</title>
<indexterm zone="GnomeIconEntry--pixmap-subdir"><primary sortas="GnomeIconEntry:pixmap-subdir">GnomeIconEntry:pixmap-subdir</primary></indexterm><programlisting>  &quot;pixmap-subdir&quot;            <link linkend="gchar">gchar</link>*                : Read / Write</programlisting>
<para>Directory that will be searched for icons.</para><para>Default value: NULL</para>
</refsect2>
</refsect1>

<refsect1 id="GnomeIconEntry.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GnomeIconEntry-browse" role="signal"><title>The <literal>&quot;browse&quot;</literal> signal</title>
<indexterm zone="GnomeIconEntry-browse"><primary sortas="GnomeIconEntry::browse">GnomeIconEntry::browse</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                                        <link linkend="gpointer">gpointer</link>        user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iconentry</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeIconEntry-changed" role="signal"><title>The <literal>&quot;changed&quot;</literal> signal</title>
<indexterm zone="GnomeIconEntry-changed"><primary sortas="GnomeIconEntry::changed">GnomeIconEntry::changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                                        <link linkend="gpointer">gpointer</link>        user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iconentry</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
