<refentry id="GnomeMDI">
<refmeta>
<refentrytitle role="top_of_page" id="GnomeMDI.top_of_page">GnomeMDI</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeMDI</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="GnomeMDI.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;

enum                <link linkend="GnomeMDIMode">GnomeMDIMode</link>;
                    <link linkend="GnomeMDI-struct">GnomeMDI</link>;
<link linkend="GtkObject">GtkObject</link> *         <link linkend="gnome-mdi-new">gnome_mdi_new</link>                       (const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-mode">gnome_mdi_set_mode</link>                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIMode">GnomeMDIMode</link> mode);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-menubar-template">gnome_mdi_set_menubar_template</link>      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menu_tmpl);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-toolbar-template">gnome_mdi_set_toolbar_template</link>      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *tbar_tmpl);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-child-menu-path">gnome_mdi_set_child_menu_path</link>       (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-child-list-path">gnome_mdi_set_child_list_path</link>       (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-add-view">gnome_mdi_add_view</link>                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-add-toplevel-view">gnome_mdi_add_toplevel_view</link>         (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-remove-view">gnome_mdi_remove_view</link>               (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkWidget">GtkWidget</link> *view,
                                                         <link linkend="gint">gint</link> force);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-mdi-get-active-view">gnome_mdi_get_active_view</link>           (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);
<link linkend="void">void</link>                <link linkend="gnome-mdi-set-active-view">gnome_mdi_set_active_view</link>           (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkWidget">GtkWidget</link> *view);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-add-child">gnome_mdi_add_child</link>                 (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-remove-child">gnome_mdi_remove_child</link>              (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child,
                                                         <link linkend="gint">gint</link> force);
<link linkend="gint">gint</link>                <link linkend="gnome-mdi-remove-all">gnome_mdi_remove_all</link>                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="gint">gint</link> force);
<link linkend="void">void</link>                <link linkend="gnome-mdi-open-toplevel">gnome_mdi_open_toplevel</link>             (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);
<link linkend="void">void</link>                <link linkend="gnome-mdi-update-child">gnome_mdi_update_child</link>              (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);
<link linkend="GnomeMDIChild">GnomeMDIChild</link> *     <link linkend="gnome-mdi-get-active-child">gnome_mdi_get_active_child</link>          (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);
<link linkend="GnomeMDIChild">GnomeMDIChild</link> *     <link linkend="gnome-mdi-find-child">gnome_mdi_find_child</link>                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="GnomeApp">GnomeApp</link> *          <link linkend="gnome-mdi-get-active-window">gnome_mdi_get_active_window</link>         (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);
<link linkend="void">void</link>                <link linkend="gnome-mdi-register">gnome_mdi_register</link>                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkObject">GtkObject</link> *object);
<link linkend="void">void</link>                <link linkend="gnome-mdi-unregister">gnome_mdi_unregister</link>                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkObject">GtkObject</link> *object);
<link linkend="GnomeApp">GnomeApp</link> *          <link linkend="gnome-mdi-get-app-from-view">gnome_mdi_get_app_from_view</link>         (<link linkend="GtkWidget">GtkWidget</link> *view);
<link linkend="GnomeMDIChild">GnomeMDIChild</link> *     <link linkend="gnome-mdi-get-child-from-view">gnome_mdi_get_child_from_view</link>       (<link linkend="GtkWidget">GtkWidget</link> *view);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-mdi-get-view-from-window">gnome_mdi_get_view_from_window</link>      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeApp">GnomeApp</link> *app);
<link linkend="GnomeUIInfo">GnomeUIInfo</link> *       <link linkend="gnome-mdi-get-menubar-info">gnome_mdi_get_menubar_info</link>          (<link linkend="GnomeApp">GnomeApp</link> *app);
<link linkend="GnomeUIInfo">GnomeUIInfo</link> *       <link linkend="gnome-mdi-get-toolbar-info">gnome_mdi_get_toolbar_info</link>          (<link linkend="GnomeApp">GnomeApp</link> *app);
<link linkend="GnomeUIInfo">GnomeUIInfo</link> *       <link linkend="gnome-mdi-get-child-menu-info">gnome_mdi_get_child_menu_info</link>       (<link linkend="GnomeApp">GnomeApp</link> *app);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GnomeMDI.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----GnomeMDI
</synopsis>
</refsect1>






<refsect1 id="GnomeMDI.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GnomeMDI-add-child">add-child</link>&quot;                                      : Run Last
  &quot;<link linkend="GnomeMDI-add-view">add-view</link>&quot;                                       : Run Last
  &quot;<link linkend="GnomeMDI-app-created">app-created</link>&quot;                                    : Run Last
  &quot;<link linkend="GnomeMDI-child-changed">child-changed</link>&quot;                                  : Run Last
  &quot;<link linkend="GnomeMDI-remove-child">remove-child</link>&quot;                                   : Run Last
  &quot;<link linkend="GnomeMDI-remove-view">remove-view</link>&quot;                                    : Run Last
  &quot;<link linkend="GnomeMDI-view-changed">view-changed</link>&quot;                                   : Run Last
</synopsis>
</refsect1>


<refsect1 id="GnomeMDI.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="GnomeMDI.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeMDIMode" role="enum" condition="deprecated:">
<title>enum GnomeMDIMode</title>
<indexterm zone="GnomeMDIMode" role="deprecated"><primary sortas="GnomeMDIMode">GnomeMDIMode</primary></indexterm><programlisting>typedef enum {
	GNOME_MDI_NOTEBOOK,
	GNOME_MDI_TOPLEVEL,
	GNOME_MDI_MODAL,
	GNOME_MDI_DEFAULT_MODE = 42
} GnomeMDIMode;
</programlisting>
<warning><para><literal>GnomeMDIMode</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="GnomeMDI-struct" role="struct">
<title>GnomeMDI</title>
<indexterm zone="GnomeMDI-struct" role="deprecated"><primary sortas="GnomeMDI">GnomeMDI</primary></indexterm><programlisting>typedef struct _GnomeMDI GnomeMDI;</programlisting>
<warning><para><literal>GnomeMDI</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="gnome-mdi-new" role="function" condition="deprecated:">
<title>gnome_mdi_new ()</title>
<indexterm zone="gnome-mdi-new" role="deprecated"><primary sortas="gnome_mdi_new">gnome_mdi_new</primary></indexterm><programlisting><link linkend="GtkObject">GtkObject</link> *         gnome_mdi_new                       (const <link linkend="gchar">gchar</link> *appname,
                                                         const <link linkend="gchar">gchar</link> *title);</programlisting>
<warning><para><literal>gnome_mdi_new</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new MDI object. <parameter>appname</parameter> and <parameter>title</parameter> are used for
MDI's calling <link linkend="gnome-app-new"><function>gnome_app_new()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>appname</parameter>&#160;:</term>
<listitem><simpara> Application name as used in filenames and paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> Title of the application windows.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to a new GnomeMDI object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-mode" role="function" condition="deprecated:">
<title>gnome_mdi_set_mode ()</title>
<indexterm zone="gnome-mdi-set-mode" role="deprecated"><primary sortas="gnome_mdi_set_mode">gnome_mdi_set_mode</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_mode                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIMode">GnomeMDIMode</link> mode);</programlisting>
<warning><para><literal>gnome_mdi_set_mode</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the MDI mode to mode. Possible values are <link linkend="GNOME-MDI-TOPLEVEL--CAPS"><literal>GNOME_MDI_TOPLEVEL</literal></link>,
<link linkend="GNOME-MDI-NOTEBOOK--CAPS"><literal>GNOME_MDI_NOTEBOOK</literal></link>, <link linkend="GNOME-MDI-MODAL--CAPS"><literal>GNOME_MDI_MODAL</literal></link> and <link linkend="GNOME-MDI-DEFAULT--CAPS"><literal>GNOME_MDI_DEFAULT</literal></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&#160;:</term>
<listitem><simpara> New mode.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-menubar-template" role="function" condition="deprecated:">
<title>gnome_mdi_set_menubar_template ()</title>
<indexterm zone="gnome-mdi-set-menubar-template" role="deprecated"><primary sortas="gnome_mdi_set_menubar_template">gnome_mdi_set_menubar_template</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_menubar_template      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menu_tmpl);</programlisting>
<warning><para><literal>gnome_mdi_set_menubar_template</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This function sets the template for menus that appear in each toplevel
window to menu_template. For each new toplevel window created by the MDI,
this structure is copied, the menus are created with
<link linkend="gnome-app-create-menus-with-data"><function>gnome_app_create_menus_with_data()</function></link> function with mdi as the callback
user data. Finally, the pointer to the copy is assigned to the new
toplevel window (a GnomeApp widget) and can be obtained by calling
&amp;gnome_mdi_get_menubar_info.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menu_tmpl</parameter>&#160;:</term>
<listitem><simpara> A GnomeUIInfo array describing the menu.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-toolbar-template" role="function" condition="deprecated:">
<title>gnome_mdi_set_toolbar_template ()</title>
<indexterm zone="gnome-mdi-set-toolbar-template" role="deprecated"><primary sortas="gnome_mdi_set_toolbar_template">gnome_mdi_set_toolbar_template</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_toolbar_template      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *tbar_tmpl);</programlisting>
<warning><para><literal>gnome_mdi_set_toolbar_template</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
This function sets the template for toolbar that appears in each toplevel
window to toolbar_template. For each new toplevel window created by the MDI,
this structure is copied, the toolbar is created with
<link linkend="gnome-app-create-toolbar-with-data"><function>gnome_app_create_toolbar_with_data()</function></link> function with mdi as the callback
user data. Finally, the pointer to the copy is assigned to the new toplevel
window (a GnomeApp widget) and can be retrieved with a call to
&amp;gnome_mdi_get_toolbar_info.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tbar_tmpl</parameter>&#160;:</term>
<listitem><simpara> A GnomeUIInfo array describing the toolbar.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-child-menu-path" role="function" condition="deprecated:">
<title>gnome_mdi_set_child_menu_path ()</title>
<indexterm zone="gnome-mdi-set-child-menu-path" role="deprecated"><primary sortas="gnome_mdi_set_child_menu_path">gnome_mdi_set_child_menu_path</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_child_menu_path       (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<warning><para><literal>gnome_mdi_set_child_menu_path</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the desired position of child-specific menus (which are added to and
removed from the main menus as views of different children are activated).
See gnome_app_find_menu_pos for details on menu paths.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A menu path where the child menus should be inserted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-child-list-path" role="function" condition="deprecated:">
<title>gnome_mdi_set_child_list_path ()</title>
<indexterm zone="gnome-mdi-set-child-list-path" role="deprecated"><primary sortas="gnome_mdi_set_child_list_path">gnome_mdi_set_child_list_path</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_child_list_path       (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<warning><para><literal>gnome_mdi_set_child_list_path</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the position for insertion of menu items used to activate the MDI
children that were added to the MDI. See gnome_app_find_menu_pos for
details on menu paths. If the path is not set or set to <link linkend="NULL--CAPS"><literal>NULL</literal></link>, these menu
items aren't going to be inserted in the MDI menu structure. Note that if
you want all menu items to be inserted in their own submenu, you have to
create that submenu (and leave it empty, of course).</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A menu path where the child list menu should be inserted
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-add-view" role="function" condition="deprecated:">
<title>gnome_mdi_add_view ()</title>
<indexterm zone="gnome-mdi-add-view" role="deprecated"><primary sortas="gnome_mdi_add_view">gnome_mdi_add_view</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_add_view                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);</programlisting>
<warning><para><literal>gnome_mdi_add_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new view of the child and adds it to the MDI. GnomeMDIChild
<parameter>child</parameter> has to be added to the MDI with a call to gnome_mdi_add_child
before its views are added to the MDI.
An "add_view" signal is emitted to the MDI after the view has been
created, but before it is shown and added to the MDI, with a pointer to
the created view as its parameter. The view is added to the MDI only if
the signal handler (if it exists) returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>. If the handler returns
<link linkend="FALSE--CAPS"><literal>FALSE</literal></link>, the created view is destroyed and not added to the MDI.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&#160;:</term>
<listitem><simpara> A pointer to a child.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if adding the view succeeded and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-add-toplevel-view" role="function" condition="deprecated:">
<title>gnome_mdi_add_toplevel_view ()</title>
<indexterm zone="gnome-mdi-add-toplevel-view" role="deprecated"><primary sortas="gnome_mdi_add_toplevel_view">gnome_mdi_add_toplevel_view</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_add_toplevel_view         (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);</programlisting>
<warning><para><literal>gnome_mdi_add_toplevel_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Creates a new view of the child and adds it to the MDI; it behaves the
same way as gnome_mdi_add_view in <link linkend="GNOME-MDI-MODAL--CAPS"><literal>GNOME_MDI_MODAL</literal></link> and <link linkend="GNOME-MDI-TOPLEVEL--CAPS"><literal>GNOME_MDI_TOPLEVEL</literal></link>
modes, but in <link linkend="GNOME-MDI-NOTEBOOK--CAPS"><literal>GNOME_MDI_NOTEBOOK</literal></link> mode, the view is added in a new
toplevel window unless the active one has no views in it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDIChild object to be added to the MDI.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if adding the view succeeded and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-remove-view" role="function" condition="deprecated:">
<title>gnome_mdi_remove_view ()</title>
<indexterm zone="gnome-mdi-remove-view" role="deprecated"><primary sortas="gnome_mdi_remove_view">gnome_mdi_remove_view</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_remove_view               (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkWidget">GtkWidget</link> *view,
                                                         <link linkend="gint">gint</link> force);</programlisting>
<warning><para><literal>gnome_mdi_remove_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Removes a view from an MDI.
A "remove_view" signal is emitted to the MDI before actually removing
view. The view is removed only if the signal handler (if it exists and
the <parameter>force</parameter> is set to <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>) returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>view</parameter>&#160;:</term>
<listitem><simpara> View to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>force</parameter>&#160;:</term>
<listitem><simpara> If TRUE, the "remove_view" signal is not emitted.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the view was removed and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-active-view" role="function" condition="deprecated:">
<title>gnome_mdi_get_active_view ()</title>
<indexterm zone="gnome-mdi-get-active-view" role="deprecated"><primary sortas="gnome_mdi_get_active_view">gnome_mdi_get_active_view</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_mdi_get_active_view           (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);</programlisting>
<warning><para><literal>gnome_mdi_get_active_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns a pointer to the active view (the one with the focus).</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to a GtkWidget *.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-set-active-view" role="function" condition="deprecated:">
<title>gnome_mdi_set_active_view ()</title>
<indexterm zone="gnome-mdi-set-active-view" role="deprecated"><primary sortas="gnome_mdi_set_active_view">gnome_mdi_set_active_view</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_set_active_view           (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkWidget">GtkWidget</link> *view);</programlisting>
<warning><para><literal>gnome_mdi_set_active_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Sets the active view to <parameter>view</parameter>. It also raises the window containing it
and gives it focus.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to an MDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>view</parameter>&#160;:</term>
<listitem><simpara> A pointer to the view that is to become the active one.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-add-child" role="function" condition="deprecated:">
<title>gnome_mdi_add_child ()</title>
<indexterm zone="gnome-mdi-add-child" role="deprecated"><primary sortas="gnome_mdi_add_child">gnome_mdi_add_child</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_add_child                 (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);</programlisting>
<warning><para><literal>gnome_mdi_add_child</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Adds a new child to the MDI. No views are added: this has to be done with
a call to gnome_mdi_add_view.
First an "add_child" signal is emitted to the MDI with a pointer to the
child as its parameter. The child is added to the MDI only if the signal
handler (if it exists) returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>. If the handler returns <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>, the
child is not added to the MDI.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDIChild to add to the MDI.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the child was added successfully and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-remove-child" role="function" condition="deprecated:">
<title>gnome_mdi_remove_child ()</title>
<indexterm zone="gnome-mdi-remove-child" role="deprecated"><primary sortas="gnome_mdi_remove_child">gnome_mdi_remove_child</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_remove_child              (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child,
                                                         <link linkend="gint">gint</link> force);</programlisting>
<warning><para><literal>gnome_mdi_remove_child</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Removes a child and all of its views from the MDI.
A "remove_child" signal is emitted to the MDI with <parameter>child</parameter> as its parameter
before actually removing the child. The child is removed only if the signal
handler (if it exists and the <parameter>force</parameter> is set to <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>) returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&#160;:</term>
<listitem><simpara> Child to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>force</parameter>&#160;:</term>
<listitem><simpara> If TRUE, the "remove_child" signal is not emitted
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the removal was successful and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-remove-all" role="function" condition="deprecated:">
<title>gnome_mdi_remove_all ()</title>
<indexterm zone="gnome-mdi-remove-all" role="deprecated"><primary sortas="gnome_mdi_remove_all">gnome_mdi_remove_all</primary></indexterm><programlisting><link linkend="gint">gint</link>                gnome_mdi_remove_all                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="gint">gint</link> force);</programlisting>
<warning><para><literal>gnome_mdi_remove_all</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Removes all children and all views from the MDI.
A "remove_child" signal is emitted to the MDI for each child before
actually trying to remove any. If signal handlers for all children (if
they exist and the <parameter>force</parameter> is set to <link linkend="FALSE--CAPS"><literal>FALSE</literal></link>) return <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, all children
and their views are removed and none otherwise.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>force</parameter>&#160;:</term>
<listitem><simpara> If TRUE, the "remove_child" signal is not emitted
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
<link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the removal was successful and <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-open-toplevel" role="function" condition="deprecated:">
<title>gnome_mdi_open_toplevel ()</title>
<indexterm zone="gnome-mdi-open-toplevel" role="deprecated"><primary sortas="gnome_mdi_open_toplevel">gnome_mdi_open_toplevel</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_open_toplevel             (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);</programlisting>
<warning><para><literal>gnome_mdi_open_toplevel</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Opens a new toplevel window (unless in <link linkend="GNOME-MDI-MODAL--CAPS"><literal>GNOME_MDI_MODAL</literal></link> mode and a
toplevel window is already open). This is usually used only for opening
the initial window on startup (just before calling <link linkend="gtkmain"><function>gtkmain()</function></link>) if no
windows were open because a session was restored or children were added
because of command line args).</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-update-child" role="function" condition="deprecated:">
<title>gnome_mdi_update_child ()</title>
<indexterm zone="gnome-mdi-update-child" role="deprecated"><primary sortas="gnome_mdi_update_child">gnome_mdi_update_child</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_update_child              (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeMDIChild">GnomeMDIChild</link> *child);</programlisting>
<warning><para><literal>gnome_mdi_update_child</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Updates all notebook labels of <parameter>child</parameter>'s views and their window titles
after its name changes. It is not required if <link linkend="gnome-mdi-child-set-name"><function>gnome_mdi_child_set_name()</function></link>
is used for setting the child's name.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>child</parameter>&#160;:</term>
<listitem><simpara> Child to update.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-active-child" role="function" condition="deprecated:">
<title>gnome_mdi_get_active_child ()</title>
<indexterm zone="gnome-mdi-get-active-child" role="deprecated"><primary sortas="gnome_mdi_get_active_child">gnome_mdi_get_active_child</primary></indexterm><programlisting><link linkend="GnomeMDIChild">GnomeMDIChild</link> *     gnome_mdi_get_active_child          (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);</programlisting>
<warning><para><literal>gnome_mdi_get_active_child</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns a pointer to the active GnomeMDIChild object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to the active GnomeMDIChild object. <link linkend="NULL--CAPS"><literal>NULL</literal></link>, if there is none.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-find-child" role="function" condition="deprecated:">
<title>gnome_mdi_find_child ()</title>
<indexterm zone="gnome-mdi-find-child" role="deprecated"><primary sortas="gnome_mdi_find_child">gnome_mdi_find_child</primary></indexterm><programlisting><link linkend="GnomeMDIChild">GnomeMDIChild</link> *     gnome_mdi_find_child                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<warning><para><literal>gnome_mdi_find_child</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Finds a child named <parameter>name</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> A string with a name of the child to find.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to the GnomeMDIChild object if the child was found and NULL
otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-active-window" role="function" condition="deprecated:">
<title>gnome_mdi_get_active_window ()</title>
<indexterm zone="gnome-mdi-get-active-window" role="deprecated"><primary sortas="gnome_mdi_get_active_window">gnome_mdi_get_active_window</primary></indexterm><programlisting><link linkend="GnomeApp">GnomeApp</link> *          gnome_mdi_get_active_window         (<link linkend="GnomeMDI">GnomeMDI</link> *mdi);</programlisting>
<warning><para><literal>gnome_mdi_get_active_window</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns a pointer to the toplevel window containing the active view.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to a GnomeApp that has the focus.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-register" role="function" condition="deprecated:">
<title>gnome_mdi_register ()</title>
<indexterm zone="gnome-mdi-register" role="deprecated"><primary sortas="gnome_mdi_register">gnome_mdi_register</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_register                  (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkObject">GtkObject</link> *object);</programlisting>
<warning><para><literal>gnome_mdi_register</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Registers GtkObject <parameter>object</parameter> with MDI.
This is mostly intended for applications that open other windows besides
those opened by the MDI and want to continue to run even when no MDI
windows exist (an example of this would be GIMP's window with tools, if
the pictures were MDI children). As long as there is an object registered
with the MDI, the MDI will not destroy itself when the last of its windows
is closed. If no objects are registered, closing the last MDI window
results in MDI being destroyed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara> Object to register.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-unregister" role="function" condition="deprecated:">
<title>gnome_mdi_unregister ()</title>
<indexterm zone="gnome-mdi-unregister" role="deprecated"><primary sortas="gnome_mdi_unregister">gnome_mdi_unregister</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_mdi_unregister                (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GtkObject">GtkObject</link> *object);</programlisting>
<warning><para><literal>gnome_mdi_unregister</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Removes GtkObject <parameter>object</parameter> from the list of registered objects.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara> Object to unregister.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-app-from-view" role="function" condition="deprecated:">
<title>gnome_mdi_get_app_from_view ()</title>
<indexterm zone="gnome-mdi-get-app-from-view" role="deprecated"><primary sortas="gnome_mdi_get_app_from_view">gnome_mdi_get_app_from_view</primary></indexterm><programlisting><link linkend="GnomeApp">GnomeApp</link> *          gnome_mdi_get_app_from_view         (<link linkend="GtkWidget">GtkWidget</link> *view);</programlisting>
<warning><para><literal>gnome_mdi_get_app_from_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns the toplevel window for this view.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>view</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GtkWidget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to the GnomeApp containg the specified view.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-child-from-view" role="function" condition="deprecated:">
<title>gnome_mdi_get_child_from_view ()</title>
<indexterm zone="gnome-mdi-get-child-from-view" role="deprecated"><primary sortas="gnome_mdi_get_child_from_view">gnome_mdi_get_child_from_view</primary></indexterm><programlisting><link linkend="GnomeMDIChild">GnomeMDIChild</link> *     gnome_mdi_get_child_from_view       (<link linkend="GtkWidget">GtkWidget</link> *view);</programlisting>
<warning><para><literal>gnome_mdi_get_child_from_view</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns a child that <parameter>view</parameter> is a view of.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>view</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GtkWidget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to the GnomeMDIChild the view belongs to.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-view-from-window" role="function" condition="deprecated:">
<title>gnome_mdi_get_view_from_window ()</title>
<indexterm zone="gnome-mdi-get-view-from-window" role="deprecated"><primary sortas="gnome_mdi_get_view_from_window">gnome_mdi_get_view_from_window</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_mdi_get_view_from_window      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                         <link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<warning><para><literal>gnome_mdi_get_view_from_window</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Returns the pointer to the view in the MDI toplevel window <parameter>app</parameter>.
If the mode is set to <link linkend="GNOME-MDI-NOTEBOOK--CAPS"><literal>GNOME_MDI_NOTEBOOK</literal></link>, the view in the current
page is returned.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeMDI object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeApp widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A pointer to a view.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-menubar-info" role="function" condition="deprecated:">
<title>gnome_mdi_get_menubar_info ()</title>
<indexterm zone="gnome-mdi-get-menubar-info" role="deprecated"><primary sortas="gnome_mdi_get_menubar_info">gnome_mdi_get_menubar_info</primary></indexterm><programlisting><link linkend="GnomeUIInfo">GnomeUIInfo</link> *       gnome_mdi_get_menubar_info          (<link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<warning><para><literal>gnome_mdi_get_menubar_info</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeApp widget created by the MDI.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A GnomeUIInfo array used for menubar in <parameter>app</parameter> if the menubar has been created with a template.
<link linkend="NULL--CAPS"><literal>NULL</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-toolbar-info" role="function" condition="deprecated:">
<title>gnome_mdi_get_toolbar_info ()</title>
<indexterm zone="gnome-mdi-get-toolbar-info" role="deprecated"><primary sortas="gnome_mdi_get_toolbar_info">gnome_mdi_get_toolbar_info</primary></indexterm><programlisting><link linkend="GnomeUIInfo">GnomeUIInfo</link> *       gnome_mdi_get_toolbar_info          (<link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<warning><para><literal>gnome_mdi_get_toolbar_info</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeApp widget created by the MDI.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A GnomeUIInfo array used for toolbar in <parameter>app</parameter> if the toolbar has been created with a template.
<link linkend="NULL--CAPS"><literal>NULL</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-mdi-get-child-menu-info" role="function" condition="deprecated:">
<title>gnome_mdi_get_child_menu_info ()</title>
<indexterm zone="gnome-mdi-get-child-menu-info" role="deprecated"><primary sortas="gnome_mdi_get_child_menu_info">gnome_mdi_get_child_menu_info</primary></indexterm><programlisting><link linkend="GnomeUIInfo">GnomeUIInfo</link> *       gnome_mdi_get_child_menu_info       (<link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<warning><para><literal>gnome_mdi_get_child_menu_info</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A pointer to a GnomeApp widget created by the MDI.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
A GnomeUIInfo array used for child's menus in <parameter>app</parameter> if they have been created with a template.
<link linkend="NULL--CAPS"><literal>NULL</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="GnomeMDI.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GnomeMDI-add-child" role="signal"><title>The <literal>&quot;add-child&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-add-child"><primary sortas="GnomeMDI::add-child">GnomeMDI::add-child</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>      *mdi,
                                                        <link linkend="GnomeMDIChild">GnomeMDIChild</link> *arg1,
                                                        <link linkend="gpointer">gpointer</link>       user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-add-view" role="signal"><title>The <literal>&quot;add-view&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-add-view"><primary sortas="GnomeMDI::add-view">GnomeMDI::add-view</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>  *mdi,
                                                        <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-app-created" role="signal"><title>The <literal>&quot;app-created&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-app-created"><primary sortas="GnomeMDI::app-created">GnomeMDI::app-created</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeMDI">GnomeMDI</link> *mdi,
                                                        <link linkend="GnomeApp">GnomeApp</link> *arg1,
                                                        <link linkend="gpointer">gpointer</link>  user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-child-changed" role="signal"><title>The <literal>&quot;child-changed&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-child-changed"><primary sortas="GnomeMDI::child-changed">GnomeMDI::child-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>      *mdi,
                                                        <link linkend="GnomeMDIChild">GnomeMDIChild</link> *arg1,
                                                        <link linkend="gpointer">gpointer</link>       user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-remove-child" role="signal"><title>The <literal>&quot;remove-child&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-remove-child"><primary sortas="GnomeMDI::remove-child">GnomeMDI::remove-child</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>      *mdi,
                                                        <link linkend="GnomeMDIChild">GnomeMDIChild</link> *arg1,
                                                        <link linkend="gpointer">gpointer</link>       user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-remove-view" role="signal"><title>The <literal>&quot;remove-view&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-remove-view"><primary sortas="GnomeMDI::remove-view">GnomeMDI::remove-view</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>  *mdi,
                                                        <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GnomeMDI-view-changed" role="signal"><title>The <literal>&quot;view-changed&quot;</literal> signal</title>
<indexterm zone="GnomeMDI-view-changed"><primary sortas="GnomeMDI::view-changed">GnomeMDI::view-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GnomeMDI">GnomeMDI</link>  *mdi,
                                                        <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>mdi</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
