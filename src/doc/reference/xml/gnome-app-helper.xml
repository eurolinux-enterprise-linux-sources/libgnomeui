<refentry id="libgnomeui-gnome-app-helper">
<refmeta>
<refentrytitle role="top_of_page" id="libgnomeui-gnome-app-helper.top_of_page">gnome-app-helper</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-app-helper</refname>
<refpurpose>Useful functions for populating menus and toolbars.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libgnomeui-gnome-app-helper.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;

enum                <link linkend="GnomeUIInfoType">GnomeUIInfoType</link>;
enum                <link linkend="GnomeUIInfoConfigurableTypes">GnomeUIInfoConfigurableTypes</link>;
#define             <link linkend="GNOME-APP-CONFIGURABLE-ITEM-EXIT--CAPS">GNOME_APP_CONFIGURABLE_ITEM_EXIT</link>
enum                <link linkend="GnomeUIPixmapType">GnomeUIPixmapType</link>;
                    <link linkend="GnomeUIInfo">GnomeUIInfo</link>;
                    <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link>;
#define             <link linkend="GNOMEUIINFO-KEY-UIDATA--CAPS">GNOMEUIINFO_KEY_UIDATA</link>
#define             <link linkend="GNOMEUIINFO-KEY-UIBDATA--CAPS">GNOMEUIINFO_KEY_UIBDATA</link>
<link linkend="void">void</link>                (<link linkend="GnomeUISignalConnectFunc">*GnomeUISignalConnectFunc</link>)         (<link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         const <link linkend="char">char</link> *signal_name,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);
<link linkend="void">void</link>                <link linkend="gnome-accelerators-sync">gnome_accelerators_sync</link>             (void);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-menu">gnome_app_fill_menu</link>                 (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-menu-with-data">gnome_app_fill_menu_with_data</link>       (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-menu-custom">gnome_app_fill_menu_custom</link>          (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos);
<link linkend="void">void</link>                <link linkend="gnome-app-ui-configure-configurable">gnome_app_ui_configure_configurable</link> (<link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-create-menus">gnome_app_create_menus</link>              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-create-menus-interp">gnome_app_create_menus_interp</link>       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);
<link linkend="void">void</link>                <link linkend="gnome-app-create-menus-with-data">gnome_app_create_menus_with_data</link>    (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gnome-app-create-menus-custom">gnome_app_create_menus_custom</link>       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-toolbar">gnome_app_fill_toolbar</link>              (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-toolbar-with-data">gnome_app_fill_toolbar_with_data</link>    (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gnome-app-fill-toolbar-custom">gnome_app_fill_toolbar_custom</link>       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);
<link linkend="void">void</link>                <link linkend="gnome-app-create-toolbar">gnome_app_create_toolbar</link>            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-create-toolbar-interp">gnome_app_create_toolbar_interp</link>     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);
<link linkend="void">void</link>                <link linkend="gnome-app-create-toolbar-with-data">gnome_app_create_toolbar_with_data</link>  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gnome-app-create-toolbar-custom">gnome_app_create_toolbar_custom</link>     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gnome-app-find-menu-pos">gnome_app_find_menu_pos</link>             (<link linkend="GtkWidget">GtkWidget</link> *parent,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> *pos);
<link linkend="void">void</link>                <link linkend="gnome-app-remove-menus">gnome_app_remove_menus</link>              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> items);
<link linkend="void">void</link>                <link linkend="gnome-app-remove-menu-range">gnome_app_remove_menu_range</link>         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> start,
                                                         <link linkend="gint">gint</link> items);
<link linkend="void">void</link>                <link linkend="gnome-app-insert-menus-custom">gnome_app_insert_menus_custom</link>       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);
<link linkend="void">void</link>                <link linkend="gnome-app-insert-menus">gnome_app_insert_menus</link>              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-insert-menus-with-data">gnome_app_insert_menus_with_data</link>    (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo,
                                                         <link linkend="gpointer">gpointer</link> data);
<link linkend="void">void</link>                <link linkend="gnome-app-insert-menus-interp">gnome_app_insert_menus_interp</link>       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);
<link linkend="void">void</link>                <link linkend="gnome-app-install-appbar-menu-hints">gnome_app_install_appbar_menu_hints</link> (<link linkend="GnomeAppBar">GnomeAppBar</link> *appbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-install-statusbar-menu-hints">gnome_app_install_statusbar_menu_hints</link>
                                                        (<link linkend="GtkStatusbar">GtkStatusbar</link> *bar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-install-menu-hints">gnome_app_install_menu_hints</link>        (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);
<link linkend="void">void</link>                <link linkend="gnome-app-setup-toolbar">gnome_app_setup_toolbar</link>             (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="BonoboDockItem">BonoboDockItem</link> *dock_item);
#define             <link linkend="GNOMEUIINFO-END--CAPS">GNOMEUIINFO_END</link>
#define             <link linkend="GNOMEUIINFO-SEPARATOR--CAPS">GNOMEUIINFO_SEPARATOR</link>
#define             <link linkend="GNOMEUIINFO-ITEM--CAPS">GNOMEUIINFO_ITEM</link>                    (label, tooltip, callback, xpm_data)
#define             <link linkend="GNOMEUIINFO-ITEM-STOCK--CAPS">GNOMEUIINFO_ITEM_STOCK</link>              (label, tooltip, callback, stock_id)
#define             <link linkend="GNOMEUIINFO-ITEM-NONE--CAPS">GNOMEUIINFO_ITEM_NONE</link>               (label, tooltip, callback)
#define             <link linkend="GNOMEUIINFO-ITEM-DATA--CAPS">GNOMEUIINFO_ITEM_DATA</link>               (label, tooltip, callback, user_data, xpm_data)
#define             <link linkend="GNOMEUIINFO-TOGGLEITEM--CAPS">GNOMEUIINFO_TOGGLEITEM</link>              (label, tooltip, callback, xpm_data)
#define             <link linkend="GNOMEUIINFO-TOGGLEITEM-DATA--CAPS">GNOMEUIINFO_TOGGLEITEM_DATA</link>         (label, tooltip, callback, user_data, xpm_data)
#define             <link linkend="GNOMEUIINFO-HELP--CAPS">GNOMEUIINFO_HELP</link>                    (app_name)
#define             <link linkend="GNOMEUIINFO-SUBTREE--CAPS">GNOMEUIINFO_SUBTREE</link>                 (label, tree)
#define             <link linkend="GNOMEUIINFO-SUBTREE-HINT--CAPS">GNOMEUIINFO_SUBTREE_HINT</link>            (label, hint, tree)
#define             <link linkend="GNOMEUIINFO-SUBTREE-STOCK--CAPS">GNOMEUIINFO_SUBTREE_STOCK</link>           (label, tree, stock_id)
#define             <link linkend="GNOMEUIINFO-INCLUDE--CAPS">GNOMEUIINFO_INCLUDE</link>                 (tree)
#define             <link linkend="GNOMEUIINFO-RADIOLIST--CAPS">GNOMEUIINFO_RADIOLIST</link>               (list)
#define             <link linkend="GNOMEUIINFO-RADIOITEM--CAPS">GNOMEUIINFO_RADIOITEM</link>               (label, tooltip, callback, xpm_data)
#define             <link linkend="GNOMEUIINFO-RADIOITEM-DATA--CAPS">GNOMEUIINFO_RADIOITEM_DATA</link>          (label, tooltip, callback, user_data, xpm_data)
#define             <link linkend="GNOMEUIINFO-MENU-NEW-ITEM--CAPS">GNOMEUIINFO_MENU_NEW_ITEM</link>           (label, tip, cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-NEW-SUBTREE--CAPS">GNOMEUIINFO_MENU_NEW_SUBTREE</link>        (tree)
#define             <link linkend="GNOMEUIINFO-MENU-OPEN-ITEM--CAPS">GNOMEUIINFO_MENU_OPEN_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-SAVE-ITEM--CAPS">GNOMEUIINFO_MENU_SAVE_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-SAVE-AS-ITEM--CAPS">GNOMEUIINFO_MENU_SAVE_AS_ITEM</link>       (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-REVERT-ITEM--CAPS">GNOMEUIINFO_MENU_REVERT_ITEM</link>        (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PRINT-ITEM--CAPS">GNOMEUIINFO_MENU_PRINT_ITEM</link>         (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PRINT-SETUP-ITEM--CAPS">GNOMEUIINFO_MENU_PRINT_SETUP_ITEM</link>   (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-CLOSE-ITEM--CAPS">GNOMEUIINFO_MENU_CLOSE_ITEM</link>         (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-EXIT-ITEM--CAPS">GNOMEUIINFO_MENU_EXIT_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-QUIT-ITEM--CAPS">GNOMEUIINFO_MENU_QUIT_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-CUT-ITEM--CAPS">GNOMEUIINFO_MENU_CUT_ITEM</link>           (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-COPY-ITEM--CAPS">GNOMEUIINFO_MENU_COPY_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PASTE-ITEM--CAPS">GNOMEUIINFO_MENU_PASTE_ITEM</link>         (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-SELECT-ALL-ITEM--CAPS">GNOMEUIINFO_MENU_SELECT_ALL_ITEM</link>    (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-CLEAR-ITEM--CAPS">GNOMEUIINFO_MENU_CLEAR_ITEM</link>         (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-UNDO-ITEM--CAPS">GNOMEUIINFO_MENU_UNDO_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-REDO-ITEM--CAPS">GNOMEUIINFO_MENU_REDO_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-FIND-ITEM--CAPS">GNOMEUIINFO_MENU_FIND_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-FIND-AGAIN-ITEM--CAPS">GNOMEUIINFO_MENU_FIND_AGAIN_ITEM</link>    (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-REPLACE-ITEM--CAPS">GNOMEUIINFO_MENU_REPLACE_ITEM</link>       (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PROPERTIES-ITEM--CAPS">GNOMEUIINFO_MENU_PROPERTIES_ITEM</link>    (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PREFERENCES-ITEM--CAPS">GNOMEUIINFO_MENU_PREFERENCES_ITEM</link>   (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-NEW-WINDOW-ITEM--CAPS">GNOMEUIINFO_MENU_NEW_WINDOW_ITEM</link>    (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-CLOSE-WINDOW-ITEM--CAPS">GNOMEUIINFO_MENU_CLOSE_WINDOW_ITEM</link>  (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-ABOUT-ITEM--CAPS">GNOMEUIINFO_MENU_ABOUT_ITEM</link>         (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-NEW-GAME-ITEM--CAPS">GNOMEUIINFO_MENU_NEW_GAME_ITEM</link>      (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-PAUSE-GAME-ITEM--CAPS">GNOMEUIINFO_MENU_PAUSE_GAME_ITEM</link>    (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-RESTART-GAME-ITEM--CAPS">GNOMEUIINFO_MENU_RESTART_GAME_ITEM</link>  (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-UNDO-MOVE-ITEM--CAPS">GNOMEUIINFO_MENU_UNDO_MOVE_ITEM</link>     (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-REDO-MOVE-ITEM--CAPS">GNOMEUIINFO_MENU_REDO_MOVE_ITEM</link>     (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-HINT-ITEM--CAPS">GNOMEUIINFO_MENU_HINT_ITEM</link>          (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-SCORES-ITEM--CAPS">GNOMEUIINFO_MENU_SCORES_ITEM</link>        (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-END-GAME-ITEM--CAPS">GNOMEUIINFO_MENU_END_GAME_ITEM</link>      (cb, data)
#define             <link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS">GNOMEUIINFO_MENU_FILE_TREE</link>          (tree)
#define             <link linkend="GNOMEUIINFO-MENU-EDIT-TREE--CAPS">GNOMEUIINFO_MENU_EDIT_TREE</link>          (tree)
#define             <link linkend="GNOMEUIINFO-MENU-VIEW-TREE--CAPS">GNOMEUIINFO_MENU_VIEW_TREE</link>          (tree)
#define             <link linkend="GNOMEUIINFO-MENU-SETTINGS-TREE--CAPS">GNOMEUIINFO_MENU_SETTINGS_TREE</link>      (tree)
#define             <link linkend="GNOMEUIINFO-MENU-FILES-TREE--CAPS">GNOMEUIINFO_MENU_FILES_TREE</link>         (tree)
#define             <link linkend="GNOMEUIINFO-MENU-WINDOWS-TREE--CAPS">GNOMEUIINFO_MENU_WINDOWS_TREE</link>       (tree)
#define             <link linkend="GNOMEUIINFO-MENU-HELP-TREE--CAPS">GNOMEUIINFO_MENU_HELP_TREE</link>          (tree)
#define             <link linkend="GNOMEUIINFO-MENU-GAME-TREE--CAPS">GNOMEUIINFO_MENU_GAME_TREE</link>          (tree)
#define             <link linkend="GNOME-MENU-FILE-STRING--CAPS">GNOME_MENU_FILE_STRING</link>
#define             <link linkend="GNOME-MENU-FILE-PATH--CAPS">GNOME_MENU_FILE_PATH</link>
#define             <link linkend="GNOME-MENU-EDIT-STRING--CAPS">GNOME_MENU_EDIT_STRING</link>
#define             <link linkend="GNOME-MENU-EDIT-PATH--CAPS">GNOME_MENU_EDIT_PATH</link>
#define             <link linkend="GNOME-MENU-VIEW-STRING--CAPS">GNOME_MENU_VIEW_STRING</link>
#define             <link linkend="GNOME-MENU-VIEW-PATH--CAPS">GNOME_MENU_VIEW_PATH</link>
#define             <link linkend="GNOME-MENU-SETTINGS-STRING--CAPS">GNOME_MENU_SETTINGS_STRING</link>
#define             <link linkend="GNOME-MENU-SETTINGS-PATH--CAPS">GNOME_MENU_SETTINGS_PATH</link>
#define             <link linkend="GNOME-MENU-NEW-STRING--CAPS">GNOME_MENU_NEW_STRING</link>
#define             <link linkend="GNOME-MENU-NEW-PATH--CAPS">GNOME_MENU_NEW_PATH</link>
#define             <link linkend="GNOME-MENU-FILES-STRING--CAPS">GNOME_MENU_FILES_STRING</link>
#define             <link linkend="GNOME-MENU-FILES-PATH--CAPS">GNOME_MENU_FILES_PATH</link>
#define             <link linkend="GNOME-MENU-WINDOWS-STRING--CAPS">GNOME_MENU_WINDOWS_STRING</link>
#define             <link linkend="GNOME-MENU-WINDOWS-PATH--CAPS">GNOME_MENU_WINDOWS_PATH</link>
const <link linkend="gchar">gchar</link> *       <link linkend="gnome-app-helper-gettext">gnome_app_helper_gettext</link>            (const <link linkend="gchar">gchar</link> *string);
#define             <link linkend="L---CAPS">L_</link>                                  (x)
#define             <link linkend="D---CAPS">D_</link>                                  (x)
</synopsis>
</refsynopsisdiv>









<refsect1 id="libgnomeui-gnome-app-helper.description" role="desc">
<title role="desc.title">Description</title>
<para>
This module lets a developer easily create menus and toolbars for use in their
applications. Basically, a hierarchy of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures are defined and
then the appropriate functions from this module are called to create the menu
or tool bars.
</para>
</refsect1>

<refsect1 id="libgnomeui-gnome-app-helper.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GnomeUIInfoType" role="enum">
<title>enum GnomeUIInfoType</title>
<indexterm zone="GnomeUIInfoType"><primary sortas="GnomeUIInfoType">GnomeUIInfoType</primary></indexterm><programlisting>typedef enum {
	GNOME_APP_UI_ENDOFINFO,
	GNOME_APP_UI_ITEM,
	GNOME_APP_UI_TOGGLEITEM,
	GNOME_APP_UI_RADIOITEMS,
	GNOME_APP_UI_SUBTREE,
	GNOME_APP_UI_SEPARATOR,
	GNOME_APP_UI_HELP,
	GNOME_APP_UI_BUILDER_DATA,
	GNOME_APP_UI_ITEM_CONFIGURABLE,
	GNOME_APP_UI_SUBTREE_STOCK,
	GNOME_APP_UI_INCLUDE
} GnomeUIInfoType;
</programlisting>
<para>
These values identify the item type that a particular GnomeUIInfo structure
specifies.
</para>
<para>
One should be careful when using gnome_app_create_[custom|interp|with_data]
functions with <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> arrays containing <link linkend="GNOME-APP-UI-BUILDER-DATA--CAPS"><type>GNOME_APP_UI_BUILDER_DATA</type></link>
items, since their <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> structures completely override the
ones generated or supplied by the above functions.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="GNOME-APP-UI-ENDOFINFO--CAPS" role="constant">
<term><literal>GNOME_APP_UI_ENDOFINFO</literal></term>
<listitem><simpara> No more items, use it at the end of an array.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-ITEM--CAPS" role="constant">
<term><literal>GNOME_APP_UI_ITEM</literal></term>
<listitem><simpara> Normal item, or radio item if it is inside a radioitems
group.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-TOGGLEITEM--CAPS" role="constant">
<term><literal>GNOME_APP_UI_TOGGLEITEM</literal></term>
<listitem><simpara> Toggle (check box) item.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-RADIOITEMS--CAPS" role="constant">
<term><literal>GNOME_APP_UI_RADIOITEMS</literal></term>
<listitem><simpara> Radio item group.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-SUBTREE--CAPS" role="constant">
<term><literal>GNOME_APP_UI_SUBTREE</literal></term>
<listitem><simpara> Item that defines a subtree/submenu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-SEPARATOR--CAPS" role="constant">
<term><literal>GNOME_APP_UI_SEPARATOR</literal></term>
<listitem><simpara> Separator line (menus) or blank space (toolbars).
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-HELP--CAPS" role="constant">
<term><literal>GNOME_APP_UI_HELP</literal></term>
<listitem><simpara> Create a list of help topics, used in the Help menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-BUILDER-DATA--CAPS" role="constant">
<term><literal>GNOME_APP_UI_BUILDER_DATA</literal></term>
<listitem><simpara> Specifies the builder data for the following
entries, see code for further info.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-ITEM-CONFIGURABLE--CAPS" role="constant">
<term><literal>GNOME_APP_UI_ITEM_CONFIGURABLE</literal></term>
<listitem><simpara> A configurable menu item.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-SUBTREE-STOCK--CAPS" role="constant">
<term><literal>GNOME_APP_UI_SUBTREE_STOCK</literal></term>
<listitem><simpara> Item that defines a subtree/submenu, same as
<link linkend="GNOME-APP-UI-SUBTREE--CAPS"><type>GNOME_APP_UI_SUBTREE</type></link>, but the texts should be looked up in the libgnome
catalog.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-UI-INCLUDE--CAPS" role="constant">
<term><literal>GNOME_APP_UI_INCLUDE</literal></term>
<listitem><simpara> Almost like <parameter>GNOME_APP_UI_SUBTREE</parameter>, but inserts items
into the current menu or whatever, instead of making a submenu.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="GnomeUIInfoConfigurableTypes" role="enum">
<title>enum GnomeUIInfoConfigurableTypes</title>
<indexterm zone="GnomeUIInfoConfigurableTypes"><primary sortas="GnomeUIInfoConfigurableTypes">GnomeUIInfoConfigurableTypes</primary></indexterm><programlisting>typedef enum {
        /* 0 */
        GNOME_APP_CONFIGURABLE_ITEM_NEW,
        GNOME_APP_CONFIGURABLE_ITEM_OPEN,
        GNOME_APP_CONFIGURABLE_ITEM_SAVE,
        GNOME_APP_CONFIGURABLE_ITEM_SAVE_AS,
        GNOME_APP_CONFIGURABLE_ITEM_REVERT,
        GNOME_APP_CONFIGURABLE_ITEM_PRINT,
        GNOME_APP_CONFIGURABLE_ITEM_PRINT_SETUP,
        GNOME_APP_CONFIGURABLE_ITEM_CLOSE,
        GNOME_APP_CONFIGURABLE_ITEM_QUIT,
        GNOME_APP_CONFIGURABLE_ITEM_CUT,
	/* 10 */
        GNOME_APP_CONFIGURABLE_ITEM_COPY,
        GNOME_APP_CONFIGURABLE_ITEM_PASTE,
        GNOME_APP_CONFIGURABLE_ITEM_CLEAR,
        GNOME_APP_CONFIGURABLE_ITEM_UNDO,
        GNOME_APP_CONFIGURABLE_ITEM_REDO,
        GNOME_APP_CONFIGURABLE_ITEM_FIND,
        GNOME_APP_CONFIGURABLE_ITEM_FIND_AGAIN,
        GNOME_APP_CONFIGURABLE_ITEM_REPLACE,
        GNOME_APP_CONFIGURABLE_ITEM_PROPERTIES,
        GNOME_APP_CONFIGURABLE_ITEM_PREFERENCES,
	/* 20 */
        GNOME_APP_CONFIGURABLE_ITEM_ABOUT,
	GNOME_APP_CONFIGURABLE_ITEM_SELECT_ALL,
	GNOME_APP_CONFIGURABLE_ITEM_NEW_WINDOW,
	GNOME_APP_CONFIGURABLE_ITEM_CLOSE_WINDOW,
	GNOME_APP_CONFIGURABLE_ITEM_NEW_GAME,
	GNOME_APP_CONFIGURABLE_ITEM_PAUSE_GAME,
	GNOME_APP_CONFIGURABLE_ITEM_RESTART_GAME,
	GNOME_APP_CONFIGURABLE_ITEM_UNDO_MOVE,
	GNOME_APP_CONFIGURABLE_ITEM_REDO_MOVE,
	GNOME_APP_CONFIGURABLE_ITEM_HINT,
	/* 30 */
	GNOME_APP_CONFIGURABLE_ITEM_SCORES,
	GNOME_APP_CONFIGURABLE_ITEM_END_GAME
} GnomeUIInfoConfigurableTypes;
</programlisting>
<para>
A user can redefine the accelerator keys for each menu item (if the
application supports this). This enum gives an identifier for each menu
shortcut that can possible be redefined. If an application is not using one
of these accelerators, then no shortcut redefinition is possible unless the
application specifically implements it (moral: use standard menu items).</para>
<para>
</para><variablelist role="enum">
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-NEW--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_NEW</literal></term>
<listitem><simpara> The "New" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-OPEN--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_OPEN</literal></term>
<listitem><simpara> The "Open" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-SAVE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_SAVE</literal></term>
<listitem><simpara> The "Save" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-SAVE-AS--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_SAVE_AS</literal></term>
<listitem><simpara> The "Save as..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-REVERT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_REVERT</literal></term>
<listitem><simpara> The "Revert" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PRINT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PRINT</literal></term>
<listitem><simpara> The "Print" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PRINT-SETUP--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PRINT_SETUP</literal></term>
<listitem><simpara> The "Print setup..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-CLOSE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_CLOSE</literal></term>
<listitem><simpara> The "Close" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-QUIT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_QUIT</literal></term>
<listitem><simpara> The "Quit" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-CUT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_CUT</literal></term>
<listitem><simpara> The "Cut" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-COPY--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_COPY</literal></term>
<listitem><simpara> The "Copy" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PASTE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PASTE</literal></term>
<listitem><simpara> The "Paste" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-CLEAR--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_CLEAR</literal></term>
<listitem><simpara> The "Clear" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-UNDO--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_UNDO</literal></term>
<listitem><simpara> The "Undo" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-REDO--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_REDO</literal></term>
<listitem><simpara> The "Redo" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-FIND--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_FIND</literal></term>
<listitem><simpara> The "Find..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-FIND-AGAIN--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_FIND_AGAIN</literal></term>
<listitem><simpara> The "Find again" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-REPLACE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_REPLACE</literal></term>
<listitem><simpara> The "Replace..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PROPERTIES--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PROPERTIES</literal></term>
<listitem><simpara> The "Properties..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PREFERENCES--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PREFERENCES</literal></term>
<listitem><simpara> The "Preferences..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-ABOUT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_ABOUT</literal></term>
<listitem><simpara> The "About..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-SELECT-ALL--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_SELECT_ALL</literal></term>
<listitem><simpara> The "Select all" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-NEW-WINDOW--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_NEW_WINDOW</literal></term>
<listitem><simpara> The "New window" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-CLOSE-WINDOW--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_CLOSE_WINDOW</literal></term>
<listitem><simpara> The "Close window" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-NEW-GAME--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_NEW_GAME</literal></term>
<listitem><simpara> The "New game" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-PAUSE-GAME--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_PAUSE_GAME</literal></term>
<listitem><simpara> The "Pause game" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-RESTART-GAME--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_RESTART_GAME</literal></term>
<listitem><simpara> The "Restart game" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-UNDO-MOVE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_UNDO_MOVE</literal></term>
<listitem><simpara> The "Undo move" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-REDO-MOVE--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_REDO_MOVE</literal></term>
<listitem><simpara> The "Redo move" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-HINT--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_HINT</literal></term>
<listitem><simpara> The "Hint" menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-SCORES--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_SCORES</literal></term>
<listitem><simpara> The "Scores..." menu.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-CONFIGURABLE-ITEM-END-GAME--CAPS" role="constant">
<term><literal>GNOME_APP_CONFIGURABLE_ITEM_END_GAME</literal></term>
<listitem><simpara> The "End game" menu.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-APP-CONFIGURABLE-ITEM-EXIT--CAPS" role="macro">
<title>GNOME_APP_CONFIGURABLE_ITEM_EXIT</title>
<indexterm zone="GNOME-APP-CONFIGURABLE-ITEM-EXIT--CAPS"><primary sortas="GNOME_APP_CONFIGURABLE_ITEM_EXIT">GNOME_APP_CONFIGURABLE_ITEM_EXIT</primary></indexterm><programlisting>#define GNOME_APP_CONFIGURABLE_ITEM_EXIT	GNOME_APP_CONFIGURABLE_ITEM_QUIT
</programlisting>
<para>
The <literal>EXIT</literal> and <literal>QUIT</literal> commands are synonyms
(they were used interchangably and inconsistently in GNOME 1). This define
just makes this the case for configurable menu items as well. Note, however,
that in GNOME 2, the use of <emphasis>exit</emphasis> is deprecated and all new
applications should use the word <emphasis>quit</emphasis> whenever termination
of an application is being discussed.
</para></refsect2>
<refsect2 id="GnomeUIPixmapType" role="enum">
<title>enum GnomeUIPixmapType</title>
<indexterm zone="GnomeUIPixmapType"><primary sortas="GnomeUIPixmapType">GnomeUIPixmapType</primary></indexterm><programlisting>typedef enum {
	GNOME_APP_PIXMAP_NONE,
	GNOME_APP_PIXMAP_STOCK,
	GNOME_APP_PIXMAP_DATA,
	GNOME_APP_PIXMAP_FILENAME
} GnomeUIPixmapType;
</programlisting>
<para>
These values identify the type of pixmap used in an item.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="GNOME-APP-PIXMAP-NONE--CAPS" role="constant">
<term><literal>GNOME_APP_PIXMAP_NONE</literal></term>
<listitem><simpara> No pixmap specified.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-PIXMAP-STOCK--CAPS" role="constant">
<term><literal>GNOME_APP_PIXMAP_STOCK</literal></term>
<listitem><simpara> Use a stock pixmap (<link linkend="GnomeStock"><type>GnomeStock</type></link>).
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-PIXMAP-DATA--CAPS" role="constant">
<term><literal>GNOME_APP_PIXMAP_DATA</literal></term>
<listitem><simpara> Use a pixmap from inline xpm data.
</simpara></listitem>
</varlistentry>
<varlistentry id="GNOME-APP-PIXMAP-FILENAME--CAPS" role="constant">
<term><literal>GNOME_APP_PIXMAP_FILENAME</literal></term>
<listitem><simpara> Use a pixmap from the specified filename.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="GnomeUIInfo" role="struct">
<title>GnomeUIInfo</title>
<indexterm zone="GnomeUIInfo"><primary sortas="GnomeUIInfo">GnomeUIInfo</primary></indexterm><programlisting>typedef struct {
	GnomeUIInfoType type;		/* Type of item */
	gchar const *label;		/* String to use in item's label */
	gchar const *hint;		/* Tooltip for toolbar items, status 
					   bar message for menu items. */
	gpointer moreinfo;		/* Extra information; depends on the
					   type. */
	gpointer user_data;		/* User data sent to the callback. */
	gpointer unused_data;		/* Should be NULL (reserved). */
	GnomeUIPixmapType pixmap_type;	/* Type of pixmap for this item. */
	gconstpointer pixmap_info;	/* Pointer to pixmap information. */
	guint accelerator_key;		/* Accelerator key, or 0 for none. */
	GdkModifierType ac_mods;	/* Mask of modifier keys for the 
					   accelerator. */
	GtkWidget *widget;		/* Filled in by the gnome_app_create* 
					   functions. */
} GnomeUIInfo;
</programlisting>
<para>
This is the structure that defines an item in a menu bar or toolbar.  The
idea is to create an array of such structures with the information needed
to create menus or toolbars. The most convenient way to create such a
structure is to use the GNOMEUIINFO_* macros provided below.
</para>
<para>
The <parameter>moreinfo</parameter> parameter contents depend on the <parameter>type</parameter>. For 'item',
'toggleitem' and 'radioitem' types, this is a pointer to the function to
call when the item is activated. For 'subtrees', it is a pointer to another
array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures. For 'radioitem lead' entry, it is a
pointer to an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures for the radio item group. For
a 'help' item, it specifies the help node to load (i.e. the application's
identifier) or <link linkend="NULL--CAPS"><literal>NULL</literal></link> for the main program's name. For 'builder data',
<parameter>moreinfo</parameter> points to the <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> structure for the subsequent
items.
</para>
<para>
The contents of the <parameter>pixmap_info</parameter> depend upon the value of <parameter>pixmap_type</parameter>. If
<parameter>pixmap_type</parameter> is <parameter>GNOME_APP_PIXMAP_STOCK</parameter>, then <parameter>pixmap_info</parameter> is a pointer to a
stock icon name. For <link linkend="GNOME-APP-PIXMAP-DATA--CAPS"><type>GNOME_APP_PIXMAP_DATA</type></link> pixmaps, <parameter>pixmap_info</parameter> is a
pointer to inline xpm data. For <link linkend="GNOME-APP-PIXMAP-FILENAME--CAPS"><type>GNOME_APP_PIXMAP_FILENAME</type></link> pixmaps, it is a
pointer to the filename string.
</para>
<para>
When <parameter>type</parameter> is <link linkend="GNOME-APP-UI-ITEM-CONFIGURABLE--CAPS"><type>GNOME_APP_UI_ITEM_CONFIGURABLE</type></link>, <parameter>accelerator_key</parameter> is
overloaded to be the name of the configurable pixmap (an element from the
<link linkend="GnomeUIInfoConfigurableTypes"><type>GnomeUIInfoConfigurableTypes</type></link> enum). In this case <parameter>ac_mods</parameter> should be 0.
</para>
<para>
The <parameter>widget</parameter> field in the <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure is filled in by the creation
function. It can be used to tweak the widgets once they have been created if
the application requires that level of fine-grained control.
</para></refsect2>
<refsect2 id="GnomeUIBuilderData" role="struct">
<title>GnomeUIBuilderData</title>
<indexterm zone="GnomeUIBuilderData"><primary sortas="GnomeUIBuilderData">GnomeUIBuilderData</primary></indexterm><programlisting>typedef struct {
	GnomeUISignalConnectFunc connect_func;
	gpointer data;
	gboolean is_interp;
	GtkCallbackMarshal relay_func;
	GDestroyNotify destroy_func;
} GnomeUIBuilderData;
</programlisting>
<para>
This structure defines how the relevant menu items are to have their signals
connected. This includes the activations signals, as well as the destroy
notifications. The affected menu items are either the items following aA
<link linkend="GNOME-APP-UI-BUILDER-DATA--CAPS"><type>GNOME_APP_UI_BUILDER_DATA</type></link> item in an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures or
all   of the menu items that are connected as a result of a call to
<link linkend="gnome-app-create-menu-custom"><function>gnome_app_create_menu_custom()</function></link> and similar functions.</para>
<para>
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="GnomeUISignalConnectFunc">GnomeUISignalConnectFunc</link>&#160;<structfield>connect_func</structfield>;</term>
<listitem><simpara> Function that connects to the item's signals.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gpointer">gpointer</link>&#160;<structfield>data</structfield>;</term>
<listitem><simpara> User data pointer for the signal callback.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gboolean">gboolean</link>&#160;<structfield>is_interp</structfield>;</term>
<listitem><simpara> If <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>, the signal should be connected with
<link linkend="g-signal-connect-closure-by-id"><function>g_signal_connect_closure_by_id()</function></link>, otherwise, <link linkend="g-signal-connect"><function>g_signal_connect()</function></link> is used.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link>&#160;<structfield>relay_func</structfield>;</term>
<listitem><simpara> Marshaller function for language bindings.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="GDestroyNotify">GDestroyNotify</link>&#160;<structfield>destroy_func</structfield>;</term>
<listitem><simpara> Destroy notification function for language bindings.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-KEY-UIDATA--CAPS" role="macro">
<title>GNOMEUIINFO_KEY_UIDATA</title>
<indexterm zone="GNOMEUIINFO-KEY-UIDATA--CAPS"><primary sortas="GNOMEUIINFO_KEY_UIDATA">GNOMEUIINFO_KEY_UIDATA</primary></indexterm><programlisting>#define GNOMEUIINFO_KEY_UIDATA		"uidata"
</programlisting>
<para>
The <literal>widget</literal> element in a <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure will have
this parameter set to the user data that was given in the <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> instance.
</para></refsect2>
<refsect2 id="GNOMEUIINFO-KEY-UIBDATA--CAPS" role="macro">
<title>GNOMEUIINFO_KEY_UIBDATA</title>
<indexterm zone="GNOMEUIINFO-KEY-UIBDATA--CAPS"><primary sortas="GNOMEUIINFO_KEY_UIBDATA">GNOMEUIINFO_KEY_UIBDATA</primary></indexterm><programlisting>#define GNOMEUIINFO_KEY_UIBDATA		"uibdata"
</programlisting>
<para>
The <literal>widget</literal> element in a <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure will have
this parameter set to the user data that was given in the relevant
<link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> structure that was applicable at the time of construction
of the widget.
</para></refsect2>
<refsect2 id="GnomeUISignalConnectFunc" role="function">
<title>GnomeUISignalConnectFunc ()</title>
<indexterm zone="GnomeUISignalConnectFunc"><primary sortas="GnomeUISignalConnectFunc">GnomeUISignalConnectFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*GnomeUISignalConnectFunc)         (<link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         const <link linkend="char">char</link> *signal_name,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);</programlisting>
<para>
The template for functions that are called as a result of signals being emitted
from a menu or tool bar item. Fnuctions of this type are given as the first
element of a <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> instance.
</para><variablelist role="params">
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara>The user data that was part of the <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signal_name</parameter>&#160;:</term>
<listitem><simpara>The name of the emitted signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara>The user data that was part of the relevant <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link>
instance.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-accelerators-sync" role="function">
<title>gnome_accelerators_sync ()</title>
<indexterm zone="gnome-accelerators-sync"><primary sortas="gnome_accelerators_sync">gnome_accelerators_sync</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_accelerators_sync             (void);</programlisting>
<para>
Flush the accelerator definitions into the application specific
configuration file $HOME/.gnome2/accels/&lt;app-id&gt;.</para>
<para>
</para></refsect2>
<refsect2 id="gnome-app-fill-menu" role="function">
<title>gnome_app_fill_menu ()</title>
<indexterm zone="gnome-app-fill-menu"><primary sortas="gnome_app_fill_menu">gnome_app_fill_menu</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_menu                 (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos);</programlisting>
<para>
Fills the specified <parameter>menu_shell</parameter> with items created from the specified
<parameter>uiinfo</parameter>, inserting them from the item number <parameter>pos</parameter> on.  The <parameter>accel_</parameter> group
will be used as the accel group for all newly created sub menus and serves
as the global accel group for all menu item hotkeys. If it is passed as
<link linkend="NULL--CAPS"><literal>NULL</literal></link>, global hotkeys will be disabled.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>menu_shell</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkMenuShell"><type>GtkMenuShell</type></link> instance (a menu bar).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A pointer to the first element in an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link>
structures. The last element of the array should have a type of
<link linkend="GNOME-APP-UI-ENDOFINFO--CAPS"><type>GNOME_APP_UI_ENDOFINFO</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uline_accels</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if underline accelerators will be drawn for the menu
item labels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> The position in the menu bar at which to start inserting items.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-fill-menu-with-data" role="function">
<title>gnome_app_fill_menu_with_data ()</title>
<indexterm zone="gnome-app-fill-menu-with-data"><primary sortas="gnome_app_fill_menu_with_data">gnome_app_fill_menu_with_data</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_menu_with_data       (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
This is the same as <link linkend="gnome-app-fill-menu"><function>gnome_app_fill_menu()</function></link>, except that all the user data
pointers are filled with the value of <parameter>user_data</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>menu_shell</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkMenuShell"><type>GtkMenuShell</type></link> instance (a menu bar).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A pointer to the first element in an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link>
structures. The last element of the array should have a type of
<link linkend="GNOME-APP-UI-ENDOFINFO--CAPS"><type>GNOME_APP_UI_ENDOFINFO</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uline_accels</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if underline accelerators will be drawn for the menu
item labels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> The position in the menu bar at which to start inserting items.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Some application-specific data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-fill-menu-custom" role="function">
<title>gnome_app_fill_menu_custom ()</title>
<indexterm zone="gnome-app-fill-menu-custom"><primary sortas="gnome_app_fill_menu_custom">gnome_app_fill_menu_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_menu_custom          (<link linkend="GtkMenuShell">GtkMenuShell</link> *menu_shell,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gboolean">gboolean</link> uline_accels,
                                                         <link linkend="gint">gint</link> pos);</programlisting>
<para>
Fills the specified menu shell with items created from the specified
<parameter>uiinfo</parameter>, inserting them from item number <parameter>pos</parameter> on and using the specified
builder data (<parameter>uibdata</parameter>) -- this is intended for language bindings. 
</para>
<para>
The other parameters have the same meaning as in <link linkend="gnome-app-fill-menu"><function>gnome_app_fill_menu()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>menu_shell</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkMenuShell"><type>GtkMenuShell</type></link> instance (a menu bar).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A pointer to the first element in an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link>
structures. The last element of the array should have a type of
<link linkend="GNOME-APP-UI-ENDOFINFO--CAPS"><type>GNOME_APP_UI_ENDOFINFO</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfoBuilderData"><type>GnomeUIInfoBuilderData</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uline_accels</parameter>&#160;:</term>
<listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if underline accelerators will be drawn for the menu
item labels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> The position in the menu bar at which to start inserting items.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-ui-configure-configurable" role="function">
<title>gnome_app_ui_configure_configurable ()</title>
<indexterm zone="gnome-app-ui-configure-configurable"><primary sortas="gnome_app_ui_configure_configurable">gnome_app_ui_configure_configurable</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_ui_configure_configurable (<link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Configure all user-configurable elements in the given UI info
structure.  This includes loading and setting previously-set options from
GNOME config files.
</para>
<para>
Normally, <link linkend="gnome-app-create-menus"><function>gnome_app_create_menus()</function></link> calls this function for the developer,
but if something needs to be altered afterwards, this function can be called
first. The main reason for this function being a public interface is so that
it can be called from <link linkend="gnome-popup-menu-new"><function>gnome_popup_menu_new()</function></link>, which clears a copy of the
pass in <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> Pointer to GNOME UI menu/toolbar info
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-menus" role="function">
<title>gnome_app_create_menus ()</title>
<indexterm zone="gnome-app-create-menus"><primary sortas="gnome_app_create_menus">gnome_app_create_menus</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_menus              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Constructs a menu bar and attaches it to the specified application
window.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance representing the current application.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> The first in an array <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> instances containing the menu
data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-menus-interp" role="function">
<title>gnome_app_create_menus_interp ()</title>
<indexterm zone="gnome-app-create-menus-interp"><primary sortas="gnome_app_create_menus_interp">gnome_app_create_menus_interp</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_menus_interp       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);</programlisting>
<para>
Identical to <link linkend="gnome-app-create-menus"><function>gnome_app_create_menus()</function></link>, except that extra functions and data
can be passed in for finer control of the destruction and marshalling.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance, representing the current application.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> The first item in an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures describing
the menu bar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>relay_func</parameter>&#160;:</term>
<listitem><simpara> A marshaller for the signal callbacks.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> Application specific data passed to the signal callback functions.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_func</parameter>&#160;:</term>
<listitem><simpara> The function to call when the menu bar is destroyed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-menus-with-data" role="function">
<title>gnome_app_create_menus_with_data ()</title>
<indexterm zone="gnome-app-create-menus-with-data"><primary sortas="gnome_app_create_menus_with_data">gnome_app_create_menus_with_data</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_menus_with_data    (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Identical to <link linkend="gnome-app-create-menus"><function>gnome_app_create_menus()</function></link>, except that <parameter>user_data</parameter> is passed to
all the callback functions when signals are emitted.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance representing the current application.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> The first in an array <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> instances containing the menu
data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Application-specific data that is passed to every callback
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-menus-custom" role="function">
<title>gnome_app_create_menus_custom ()</title>
<indexterm zone="gnome-app-create-menus-custom"><primary sortas="gnome_app_create_menus_custom">gnome_app_create_menus_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_menus_custom       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);</programlisting>
<para>
Identical to <link linkend="gnome-app-create-menus"><function>gnome_app_create_menus()</function></link>, except that <parameter>uibdata</parameter> is also
specified for creating the signal handlers. Mostly for use by language
bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance representing the current application.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> The first in an array <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> instances containing the menu
data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara> An appropriate <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> instance.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-fill-toolbar" role="function">
<title>gnome_app_fill_toolbar ()</title>
<indexterm zone="gnome-app-fill-toolbar"><primary sortas="gnome_app_fill_toolbar">gnome_app_fill_toolbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_toolbar              (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);</programlisting>
<para>
Fills <parameter>toolbar</parameter> with buttons specified in <parameter>uiinfo</parameter>. If <parameter>accel_group</parameter> is not
<link linkend="NULL--CAPS"><literal>NULL</literal></link>, the items' accelrator keys are put into it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkToolbar"><type>GtkToolbar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> An array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures containing the items for the
toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link> for holding the accelerator keys of the items
(or <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-fill-toolbar-with-data" role="function">
<title>gnome_app_fill_toolbar_with_data ()</title>
<indexterm zone="gnome-app-fill-toolbar-with-data"><primary sortas="gnome_app_fill_toolbar_with_data">gnome_app_fill_toolbar_with_data</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_toolbar_with_data    (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
The same as <link linkend="gnome-app-fill-toolbar"><function>gnome_app_fill_toolbar()</function></link>, except that the user data pointers in
the signal handlers are set to <parameter>user_data</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkToolbar"><type>GtkToolbar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> An array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures containing the items for the
toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link> for holding the accelerator keys of the items
(or <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Application specific data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-fill-toolbar-custom" role="function">
<title>gnome_app_fill_toolbar_custom ()</title>
<indexterm zone="gnome-app-fill-toolbar-custom"><primary sortas="gnome_app_fill_toolbar_custom">gnome_app_fill_toolbar_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_fill_toolbar_custom       (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata,
                                                         <link linkend="GtkAccelGroup">GtkAccelGroup</link> *accel_group);</programlisting>
<para>
The same as <link linkend="gnome-app-fill-toolbar"><function>gnome_app_fill_toolbar()</function></link>, except that the sepcified <parameter>uibdata</parameter>
instance is used. This is mostly for the benefit of language bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkToolbar"><type>GtkToolbar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> An array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures containing the items for the
toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> data for the toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accel_group</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GtkAccelGroup"><type>GtkAccelGroup</type></link> for holding the accelerator keys of the items
(or <link linkend="NULL--CAPS"><literal>NULL</literal></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-toolbar" role="function">
<title>gnome_app_create_toolbar ()</title>
<indexterm zone="gnome-app-create-toolbar"><primary sortas="gnome_app_create_toolbar">gnome_app_create_toolbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_toolbar            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Constructs a toolbar and attaches it to the specified application
window.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array specifying the contents of the toolbar.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-toolbar-interp" role="function">
<title>gnome_app_create_toolbar_interp ()</title>
<indexterm zone="gnome-app-create-toolbar-interp"><primary sortas="gnome_app_create_toolbar_interp">gnome_app_create_toolbar_interp</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_toolbar_interp     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);</programlisting>
<para>
Constructs a toolbar and attaches it to the specified application
window -- this version is intended for language bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array specifying the contents of the toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>relay_func</parameter>&#160;:</term>
<listitem><simpara> Argument marshalling function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> Application specific data to pass to signal callbacks.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_func</parameter>&#160;:</term>
<listitem><simpara> The function to call when the toolbar is destroyed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-toolbar-with-data" role="function">
<title>gnome_app_create_toolbar_with_data ()</title>
<indexterm zone="gnome-app-create-toolbar-with-data"><primary sortas="gnome_app_create_toolbar_with_data">gnome_app_create_toolbar_with_data</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_toolbar_with_data  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Constructs a toolbar, sets all the user data pointers to
<parameter>user_data</parameter>, and attaches it to <parameter>app</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array specifying the contents of the toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Application specific data to be sent to each signal callback
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-create-toolbar-custom" role="function">
<title>gnome_app_create_toolbar_custom ()</title>
<indexterm zone="gnome-app-create-toolbar-custom"><primary sortas="gnome_app_create_toolbar_custom">gnome_app_create_toolbar_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_create_toolbar_custom     (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);</programlisting>
<para>
Constructs a toolbar and attaches it to the <parameter>app</parameter> window,
using <parameter>uibdata</parameter> builder data -- intended for language bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array specifying the contents of the toolbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> instance specifying the handlers to use for
the toolbar.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-find-menu-pos" role="function">
<title>gnome_app_find_menu_pos ()</title>
<indexterm zone="gnome-app-find-menu-pos"><primary sortas="gnome_app_find_menu_pos">gnome_app_find_menu_pos</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gnome_app_find_menu_pos             (<link linkend="GtkWidget">GtkWidget</link> *parent,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> *pos);</programlisting>
<para>
Finds a menu item described by path starting in the <link linkend="GtkMenuShell"><type>GtkMenuShell</type></link> top and
returns its parent <link linkend="GtkMenuShell"><type>GtkMenuShell</type></link> and the position after this item in <parameter>pos</parameter>.
The meaning of <parameter>pos</parameter> is that a subsequent call to gtk_menu_shell_insert(p, w,
pos) would then insert widget w in GtkMenuShell p right after the menu item
described by path.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> Root menu shell widget containing menu items to be searched.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> Specifies the target menu item by menu path.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> Used to hold the returned menu items' position.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The parent menu shell of <parameter>path</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-remove-menus" role="function">
<title>gnome_app_remove_menus ()</title>
<indexterm zone="gnome-app-remove-menus"><primary sortas="gnome_app_remove_menus">gnome_app_remove_menus</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_remove_menus              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> items);</programlisting>
<para>
Removes <parameter>items</parameter> items from the existing <parameter>app</parameter>'s menu structure,
beginning with item described by <parameter>path</parameter>.
</para>
<para>
The <parameter>path</parameter> argument should be in the form "File/.../.../Something". "" will
insert the item as the first one in the menubar, "File/" will insert it as
the first one in the File menu, "File/Settings" will insert it after the
Setting item in the File menu use of "File/&lt;Separator&gt;" should be obvious.
However, the use of "&lt;Separator&gt;" stops after the first separator.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>items</parameter>&#160;:</term>
<listitem><simpara> The number of items to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-remove-menu-range" role="function">
<title>gnome_app_remove_menu_range ()</title>
<indexterm zone="gnome-app-remove-menu-range"><primary sortas="gnome_app_remove_menu_range">gnome_app_remove_menu_range</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_remove_menu_range         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="gint">gint</link> start,
                                                         <link linkend="gint">gint</link> items);</programlisting>
<para>
Same as the <link linkend="gnome-app-remove-menus"><function>gnome_app_remove_menus()</function></link>, except it removes the specified number
of <parameter>items</parameter> from the existing <parameter>app</parameter>'s menu structure begining with item
described by (<parameter>path</parameter> plus <parameter>start</parameter>). This is very useful for adding and
removing Recent document items in the File menu.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start</parameter>&#160;:</term>
<listitem><simpara> An offset beyond the start of <parameter>path</parameter> at which to begin removing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>items</parameter>&#160;:</term>
<listitem><simpara> The number of items to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-insert-menus-custom" role="function">
<title>gnome_app_insert_menus_custom ()</title>
<indexterm zone="gnome-app-insert-menus-custom"><primary sortas="gnome_app_insert_menus_custom">gnome_app_insert_menus_custom</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_insert_menus_custom       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo,
                                                         <link linkend="GnomeUIBuilderData">GnomeUIBuilderData</link> *uibdata);</programlisting>
<para>
Inserts menus described by <parameter>uiinfo</parameter> in existing <parameter>app</parameter>'s menu
structure right after the item described by <parameter>path</parameter>. The <parameter>uibdata</parameter> parameter
makes this, again, most useful for language bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array describing the menus.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uibdata</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIBuilderData"><type>GnomeUIBuilderData</type></link> instance describing the functions to attach
as the menu's callbacks.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-insert-menus" role="function">
<title>gnome_app_insert_menus ()</title>
<indexterm zone="gnome-app-insert-menus"><primary sortas="gnome_app_insert_menus">gnome_app_insert_menus</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_insert_menus              (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo);</programlisting>
<para>
Insert the menus given by <parameter>menuinfo</parameter> beginning at <parameter>path</parameter> into the pre-existing
<parameter>app</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menuinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array describing the menus.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-insert-menus-with-data" role="function">
<title>gnome_app_insert_menus_with_data ()</title>
<indexterm zone="gnome-app-insert-menus-with-data"><primary sortas="gnome_app_insert_menus_with_data">gnome_app_insert_menus_with_data</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_insert_menus_with_data    (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo,
                                                         <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
This is the same as <link linkend="gnome-app-insert-menus"><function>gnome_app_insert_menus()</function></link>, except that the specified
<parameter>data</parameter> is passed to each signal callback.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menuinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array describing the menus.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> Application specific data to send to each signal callback.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-insert-menus-interp" role="function">
<title>gnome_app_insert_menus_interp ()</title>
<indexterm zone="gnome-app-insert-menus-interp"><primary sortas="gnome_app_insert_menus_interp">gnome_app_insert_menus_interp</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_insert_menus_interp       (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *menuinfo,
                                                         <link linkend="GtkCallbackMarshal">GtkCallbackMarshal</link> relay_func,
                                                         <link linkend="gpointer">gpointer</link> data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_func);</programlisting>
<para>
THe same as <link linkend="gnome-app-insert-menus"><function>gnome_app_insert_menus()</function></link>, except that the given functions are
attached to each menu item. Mostly of use for language bindings.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeApp"><type>GnomeApp</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> A path to the menu item concerned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menuinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array describing the menus.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>relay_func</parameter>&#160;:</term>
<listitem><simpara> A custom marshallar for signal data.,
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara> Application-specific data to send to each signal callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_func</parameter>&#160;:</term>
<listitem><simpara> The function to call when the menu item is destroyed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-install-appbar-menu-hints" role="function">
<title>gnome_app_install_appbar_menu_hints ()</title>
<indexterm zone="gnome-app-install-appbar-menu-hints"><primary sortas="gnome_app_install_appbar_menu_hints">gnome_app_install_appbar_menu_hints</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_install_appbar_menu_hints (<link linkend="GnomeAppBar">GnomeAppBar</link> *appbar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Install menu hints for the given <parameter>appbar</parameter> object. This function cannot just
be called automatically, since it is impossible to reliably find the correct
<parameter>appbar</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>appbar</parameter>&#160;:</term>
<listitem><simpara> An existing <link linkend="GnomeAppBar"><type>GnomeAppBar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array of a menu for which hints will be set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-install-statusbar-menu-hints" role="function">
<title>gnome_app_install_statusbar_menu_hints ()</title>
<indexterm zone="gnome-app-install-statusbar-menu-hints"><primary sortas="gnome_app_install_statusbar_menu_hints">gnome_app_install_statusbar_menu_hints</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_install_statusbar_menu_hints
                                                        (<link linkend="GtkStatusbar">GtkStatusbar</link> *bar,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Install menu hints for the given status bar.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>bar</parameter>&#160;:</term>
<listitem><simpara> Pointer to <link linkend="GtkStatusbar"><type>GtkStatusbar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> for the menu to be changed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-install-menu-hints" role="function">
<title>gnome_app_install_menu_hints ()</title>
<indexterm zone="gnome-app-install-menu-hints"><primary sortas="gnome_app_install_menu_hints">gnome_app_install_menu_hints</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_install_menu_hints        (<link linkend="GnomeApp">GnomeApp</link> *app,
                                                         <link linkend="GnomeUIInfo">GnomeUIInfo</link> *uiinfo);</programlisting>
<para>
Set menu hints for the <parameter>app</parameter> object's attached status bar.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>app</parameter>&#160;:</term>
<listitem><simpara> An existing <link linkend="GnomeAppBar"><type>GnomeAppBar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uiinfo</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> array of a menu for which hints will be set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-setup-toolbar" role="function">
<title>gnome_app_setup_toolbar ()</title>
<indexterm zone="gnome-app-setup-toolbar"><primary sortas="gnome_app_setup_toolbar">gnome_app_setup_toolbar</primary></indexterm><programlisting><link linkend="void">void</link>                gnome_app_setup_toolbar             (<link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                                         <link linkend="BonoboDockItem">BonoboDockItem</link> *dock_item);</programlisting>
<para>
Sets up a toolbar to use GNOME user preferences.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>toolbar</parameter>&#160;:</term>
<listitem><simpara> Pointer to a <link linkend="GtkToolbar"><type>GtkToolbar</type></link> instance.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dock_item</parameter>&#160;:</term>
<listitem><simpara> Pointer to the <link linkend="BonoboDockItem"><type>BonoboDockItem</type></link> the toolbar is inside, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
for none.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-END--CAPS" role="macro">
<title>GNOMEUIINFO_END</title>
<indexterm zone="GNOMEUIINFO-END--CAPS"><primary sortas="GNOMEUIINFO_END">GNOMEUIINFO_END</primary></indexterm><programlisting>#define             GNOMEUIINFO_END</programlisting>
<para>
A macro that can be used to terminate an arrau of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-SEPARATOR--CAPS" role="macro">
<title>GNOMEUIINFO_SEPARATOR</title>
<indexterm zone="GNOMEUIINFO-SEPARATOR--CAPS"><primary sortas="GNOMEUIINFO_SEPARATOR">GNOMEUIINFO_SEPARATOR</primary></indexterm><programlisting>#define             GNOMEUIINFO_SEPARATOR</programlisting>
<para>
A macro that defines a menu seperator bar. Can be put into an array of
<link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_ITEM()</title>
<indexterm zone="GNOMEUIINFO-ITEM--CAPS"><primary sortas="GNOMEUIINFO_ITEM">GNOMEUIINFO_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_ITEM(label, tooltip, callback, xpm_data)</programlisting>
<para>
A generic menu item with an inline xpm icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-ITEM-STOCK--CAPS" role="macro">
<title>GNOMEUIINFO_ITEM_STOCK()</title>
<indexterm zone="GNOMEUIINFO-ITEM-STOCK--CAPS"><primary sortas="GNOMEUIINFO_ITEM_STOCK">GNOMEUIINFO_ITEM_STOCK</primary></indexterm><programlisting>#define             GNOMEUIINFO_ITEM_STOCK(label, tooltip, callback, stock_id)</programlisting>
<para>
A menu item with a stock icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&#160;:</term>
<listitem><simpara>The value of stock icon (from the gnome-stock-item module of this
library).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-ITEM-NONE--CAPS" role="macro">
<title>GNOMEUIINFO_ITEM_NONE()</title>
<indexterm zone="GNOMEUIINFO-ITEM-NONE--CAPS"><primary sortas="GNOMEUIINFO_ITEM_NONE">GNOMEUIINFO_ITEM_NONE</primary></indexterm><programlisting>#define             GNOMEUIINFO_ITEM_NONE(label, tooltip, callback)</programlisting>
<para>
A menu item with no icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-ITEM-DATA--CAPS" role="macro">
<title>GNOMEUIINFO_ITEM_DATA()</title>
<indexterm zone="GNOMEUIINFO-ITEM-DATA--CAPS"><primary sortas="GNOMEUIINFO_ITEM_DATA">GNOMEUIINFO_ITEM_DATA</primary></indexterm><programlisting>#define             GNOMEUIINFO_ITEM_DATA(label, tooltip, callback, user_data, xpm_data)</programlisting>
<para>
A menu item with an inline xpm icon and user data pointer for <parameter>callback</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>User data to pass to the callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-TOGGLEITEM--CAPS" role="macro">
<title>GNOMEUIINFO_TOGGLEITEM()</title>
<indexterm zone="GNOMEUIINFO-TOGGLEITEM--CAPS"><primary sortas="GNOMEUIINFO_TOGGLEITEM">GNOMEUIINFO_TOGGLEITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_TOGGLEITEM(label, tooltip, callback, xpm_data)</programlisting>
<para>
A toggle item (check box) with inline xpm icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-TOGGLEITEM-DATA--CAPS" role="macro">
<title>GNOMEUIINFO_TOGGLEITEM_DATA()</title>
<indexterm zone="GNOMEUIINFO-TOGGLEITEM-DATA--CAPS"><primary sortas="GNOMEUIINFO_TOGGLEITEM_DATA">GNOMEUIINFO_TOGGLEITEM_DATA</primary></indexterm><programlisting>#define             GNOMEUIINFO_TOGGLEITEM_DATA(label, tooltip, callback, user_data, xpm_data)</programlisting>
<para>
A toggle item (chekc box) with inline xpm icon and user data pointer for
<parameter>callback</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Menu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>User data to pass to the callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-HELP--CAPS" role="macro">
<title>GNOMEUIINFO_HELP()</title>
<indexterm zone="GNOMEUIINFO-HELP--CAPS"><primary sortas="GNOMEUIINFO_HELP">GNOMEUIINFO_HELP</primary></indexterm><programlisting>#define             GNOMEUIINFO_HELP(app_name)</programlisting>
<para>
A menu containing all help topics based on <parameter>app_name</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara>Application id string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-SUBTREE--CAPS" role="macro">
<title>GNOMEUIINFO_SUBTREE()</title>
<indexterm zone="GNOMEUIINFO-SUBTREE--CAPS"><primary sortas="GNOMEUIINFO_SUBTREE">GNOMEUIINFO_SUBTREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_SUBTREE(label, tree)</programlisting>
<para>
A subtree (submenu).
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Submenu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>A pointer to an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-SUBTREE-HINT--CAPS" role="macro">
<title>GNOMEUIINFO_SUBTREE_HINT()</title>
<indexterm zone="GNOMEUIINFO-SUBTREE-HINT--CAPS"><primary sortas="GNOMEUIINFO_SUBTREE_HINT">GNOMEUIINFO_SUBTREE_HINT</primary></indexterm><programlisting>#define             GNOMEUIINFO_SUBTREE_HINT(label, hint, tree)</programlisting>
<para>
A subtree with a hint.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Submenu label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&#160;:</term>
<listitem><simpara>Hint for statusbar.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>A pointer to an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-SUBTREE-STOCK--CAPS" role="macro">
<title>GNOMEUIINFO_SUBTREE_STOCK()</title>
<indexterm zone="GNOMEUIINFO-SUBTREE-STOCK--CAPS"><primary sortas="GNOMEUIINFO_SUBTREE_STOCK">GNOMEUIINFO_SUBTREE_STOCK</primary></indexterm><programlisting>#define             GNOMEUIINFO_SUBTREE_STOCK(label, tree, stock_id)</programlisting>
<para>
A subtree using a stock icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>A pointer to an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structs.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stock_id</parameter>&#160;:</term>
<listitem><simpara>The value of stock icon (from the gnome-stock-item module of this
library).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-INCLUDE--CAPS" role="macro">
<title>GNOMEUIINFO_INCLUDE()</title>
<indexterm zone="GNOMEUIINFO-INCLUDE--CAPS"><primary sortas="GNOMEUIINFO_INCLUDE">GNOMEUIINFO_INCLUDE</primary></indexterm><programlisting>#define             GNOMEUIINFO_INCLUDE(tree)</programlisting>
<para>
A menu that should be included at the current point of the current menu (like
<link linkend="GNOMEUIINFO-SUBTREE--CAPS"><type>GNOMEUIINFO_SUBTREE</type></link>, but doesn't create a submenu).
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>A pointer to an array of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structures.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-RADIOLIST--CAPS" role="macro">
<title>GNOMEUIINFO_RADIOLIST()</title>
<indexterm zone="GNOMEUIINFO-RADIOLIST--CAPS"><primary sortas="GNOMEUIINFO_RADIOLIST">GNOMEUIINFO_RADIOLIST</primary></indexterm><programlisting>#define             GNOMEUIINFO_RADIOLIST(list)</programlisting>
<para>
A list of radio items.
</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&#160;:</term>
<listitem><simpara>Pointer to a list of <link linkend="GNOMEUIINFO-RADIOITEM--CAPS"><type>GNOMEUIINFO_RADIOITEM</type></link> elements.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-RADIOITEM--CAPS" role="macro">
<title>GNOMEUIINFO_RADIOITEM()</title>
<indexterm zone="GNOMEUIINFO-RADIOITEM--CAPS"><primary sortas="GNOMEUIINFO_RADIOITEM">GNOMEUIINFO_RADIOITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_RADIOITEM(label, tooltip, callback, xpm_data)</programlisting>
<para>
A radio item with an inline xpm icon.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Item label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-RADIOITEM-DATA--CAPS" role="macro">
<title>GNOMEUIINFO_RADIOITEM_DATA()</title>
<indexterm zone="GNOMEUIINFO-RADIOITEM-DATA--CAPS"><primary sortas="GNOMEUIINFO_RADIOITEM_DATA">GNOMEUIINFO_RADIOITEM_DATA</primary></indexterm><programlisting>#define             GNOMEUIINFO_RADIOITEM_DATA(label, tooltip, callback, user_data, xpm_data)</programlisting>
<para>
A radio item with an inline xpm icon and user data for <parameter>callback</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>Item label.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tooltip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>Function to call on selection of this item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>User data for the callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xpm_data</parameter>&#160;:</term>
<listitem><simpara>Pixmap data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-NEW-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_NEW_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-NEW-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_NEW_ITEM">GNOMEUIINFO_MENU_NEW_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_NEW_ITEM(label, tip, cb, data)</programlisting>
<para>
A "New" entry (typically in the "File" menu).
</para><variablelist role="params">
<varlistentry><term><parameter>label</parameter>&#160;:</term>
<listitem><simpara>The label for the menu item (the thing being created).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tip</parameter>&#160;:</term>
<listitem><simpara>Tooltip for the item.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>User data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-NEW-SUBTREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_NEW_SUBTREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-NEW-SUBTREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_NEW_SUBTREE">GNOMEUIINFO_MENU_NEW_SUBTREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_NEW_SUBTREE(tree)</programlisting>
<para>
A "New" menu item that creates a subtree (for when you have more than one thing
that can be created anew).
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a list of <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> menu structures.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-OPEN-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_OPEN_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-OPEN-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_OPEN_ITEM">GNOMEUIINFO_MENU_OPEN_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_OPEN_ITEM(cb, data)</programlisting>
<para>
An "Open..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-SAVE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_SAVE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-SAVE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_SAVE_ITEM">GNOMEUIINFO_MENU_SAVE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_SAVE_ITEM(cb, data)</programlisting>
<para>
A "Save" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-SAVE-AS-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_SAVE_AS_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-SAVE-AS-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_SAVE_AS_ITEM">GNOMEUIINFO_MENU_SAVE_AS_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_SAVE_AS_ITEM(cb, data)</programlisting>
<para>
A "Save as..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-REVERT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_REVERT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-REVERT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_REVERT_ITEM">GNOMEUIINFO_MENU_REVERT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_REVERT_ITEM(cb, data)</programlisting>
<para>
A "Revert" (to last saved) menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PRINT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PRINT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PRINT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PRINT_ITEM">GNOMEUIINFO_MENU_PRINT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PRINT_ITEM(cb, data)</programlisting>
<para>
A "Print" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PRINT-SETUP-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PRINT_SETUP_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PRINT-SETUP-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PRINT_SETUP_ITEM">GNOMEUIINFO_MENU_PRINT_SETUP_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PRINT_SETUP_ITEM(cb, data)</programlisting>
<para>
A "Print setup..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-CLOSE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_CLOSE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-CLOSE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_CLOSE_ITEM">GNOMEUIINFO_MENU_CLOSE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_CLOSE_ITEM(cb, data)</programlisting>
<para>
A "Close" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-EXIT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_EXIT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-EXIT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_EXIT_ITEM">GNOMEUIINFO_MENU_EXIT_ITEM</primary></indexterm><programlisting>#define GNOMEUIINFO_MENU_EXIT_ITEM(cb, data)	GNOMEUIINFO_MENU_QUIT_ITEM(cb, data)
</programlisting>
<para>
An "Exit" menu item (deprecated).
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-QUIT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_QUIT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-QUIT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_QUIT_ITEM">GNOMEUIINFO_MENU_QUIT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_QUIT_ITEM(cb, data)</programlisting>
<para>
A "Quit" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-CUT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_CUT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-CUT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_CUT_ITEM">GNOMEUIINFO_MENU_CUT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_CUT_ITEM(cb, data)</programlisting>
<para>
A "Cut" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-COPY-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_COPY_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-COPY-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_COPY_ITEM">GNOMEUIINFO_MENU_COPY_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_COPY_ITEM(cb, data)</programlisting>
<para>
A "Copy" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PASTE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PASTE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PASTE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PASTE_ITEM">GNOMEUIINFO_MENU_PASTE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PASTE_ITEM(cb, data)</programlisting>
<para>
A "Paste" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-SELECT-ALL-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_SELECT_ALL_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-SELECT-ALL-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_SELECT_ALL_ITEM">GNOMEUIINFO_MENU_SELECT_ALL_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_SELECT_ALL_ITEM(cb, data)</programlisting>
<para>
A "Select All" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-CLEAR-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_CLEAR_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-CLEAR-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_CLEAR_ITEM">GNOMEUIINFO_MENU_CLEAR_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_CLEAR_ITEM(cb, data)</programlisting>
<para>
A "clear" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-UNDO-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_UNDO_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-UNDO-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_UNDO_ITEM">GNOMEUIINFO_MENU_UNDO_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_UNDO_ITEM(cb, data)</programlisting>
<para>
An "Undo" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-REDO-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_REDO_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-REDO-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_REDO_ITEM">GNOMEUIINFO_MENU_REDO_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_REDO_ITEM(cb, data)</programlisting>
<para>
A "Redo" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-FIND-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_FIND_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-FIND-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_FIND_ITEM">GNOMEUIINFO_MENU_FIND_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_FIND_ITEM(cb, data)</programlisting>
<para>
A "Find" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-FIND-AGAIN-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_FIND_AGAIN_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-FIND-AGAIN-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_FIND_AGAIN_ITEM">GNOMEUIINFO_MENU_FIND_AGAIN_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_FIND_AGAIN_ITEM(cb, data)</programlisting>
<para>
A "Find Again" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-REPLACE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_REPLACE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-REPLACE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_REPLACE_ITEM">GNOMEUIINFO_MENU_REPLACE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_REPLACE_ITEM(cb, data)</programlisting>
<para>
A "Replace" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PROPERTIES-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PROPERTIES_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PROPERTIES-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PROPERTIES_ITEM">GNOMEUIINFO_MENU_PROPERTIES_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PROPERTIES_ITEM(cb, data)</programlisting>
<para>
A "Properties..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PREFERENCES-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PREFERENCES_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PREFERENCES-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PREFERENCES_ITEM">GNOMEUIINFO_MENU_PREFERENCES_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PREFERENCES_ITEM(cb, data)</programlisting>
<para>
A "Preferences..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-NEW-WINDOW-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_NEW_WINDOW_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-NEW-WINDOW-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_NEW_WINDOW_ITEM">GNOMEUIINFO_MENU_NEW_WINDOW_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_NEW_WINDOW_ITEM(cb, data)</programlisting>
<para>
A "New Window" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-CLOSE-WINDOW-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_CLOSE_WINDOW_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-CLOSE-WINDOW-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_CLOSE_WINDOW_ITEM">GNOMEUIINFO_MENU_CLOSE_WINDOW_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_CLOSE_WINDOW_ITEM(cb, data)</programlisting>
<para>
A "Close Window" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-ABOUT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_ABOUT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-ABOUT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_ABOUT_ITEM">GNOMEUIINFO_MENU_ABOUT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_ABOUT_ITEM(cb, data)</programlisting>
<para>
An "About..." menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-NEW-GAME-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_NEW_GAME_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-NEW-GAME-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_NEW_GAME_ITEM">GNOMEUIINFO_MENU_NEW_GAME_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_NEW_GAME_ITEM(cb, data)</programlisting>
<para>
A "New Game" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-PAUSE-GAME-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_PAUSE_GAME_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-PAUSE-GAME-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_PAUSE_GAME_ITEM">GNOMEUIINFO_MENU_PAUSE_GAME_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_PAUSE_GAME_ITEM(cb, data)</programlisting>
<para>
A "Pause Game" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-RESTART-GAME-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_RESTART_GAME_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-RESTART-GAME-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_RESTART_GAME_ITEM">GNOMEUIINFO_MENU_RESTART_GAME_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_RESTART_GAME_ITEM(cb, data)</programlisting>
<para>
A "Restart Game" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-UNDO-MOVE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_UNDO_MOVE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-UNDO-MOVE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_UNDO_MOVE_ITEM">GNOMEUIINFO_MENU_UNDO_MOVE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_UNDO_MOVE_ITEM(cb, data)</programlisting>
<para>
An "Undo Move" menu item (for games, usually).
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-REDO-MOVE-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_REDO_MOVE_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-REDO-MOVE-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_REDO_MOVE_ITEM">GNOMEUIINFO_MENU_REDO_MOVE_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_REDO_MOVE_ITEM(cb, data)</programlisting>
<para>
A "Redo move" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-HINT-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_HINT_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-HINT-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_HINT_ITEM">GNOMEUIINFO_MENU_HINT_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_HINT_ITEM(cb, data)</programlisting>
<para>
A "Hint" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-SCORES-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_SCORES_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-SCORES-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_SCORES_ITEM">GNOMEUIINFO_MENU_SCORES_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_SCORES_ITEM(cb, data)</programlisting>
<para>
A "Scores" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-END-GAME-ITEM--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_END_GAME_ITEM()</title>
<indexterm zone="GNOMEUIINFO-MENU-END-GAME-ITEM--CAPS"><primary sortas="GNOMEUIINFO_MENU_END_GAME_ITEM">GNOMEUIINFO_MENU_END_GAME_ITEM</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_END_GAME_ITEM(cb, data)</programlisting>
<para>
An "End Game" menu item.
</para><variablelist role="params">
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback for when the menu item is selected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>Used data to pass to the callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-FILE-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_FILE_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_FILE_TREE">GNOMEUIINFO_MENU_FILE_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_FILE_TREE(tree)</programlisting>
<para>
A "File" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-EDIT-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_EDIT_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-EDIT-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_EDIT_TREE">GNOMEUIINFO_MENU_EDIT_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_EDIT_TREE(tree)</programlisting>
<para>
An "Edit" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-VIEW-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_VIEW_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-VIEW-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_VIEW_TREE">GNOMEUIINFO_MENU_VIEW_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_VIEW_TREE(tree)</programlisting>
<para>
A "View" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-SETTINGS-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_SETTINGS_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-SETTINGS-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_SETTINGS_TREE">GNOMEUIINFO_MENU_SETTINGS_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_SETTINGS_TREE(tree)</programlisting>
<para>
A "Settings" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-FILES-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_FILES_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-FILES-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_FILES_TREE">GNOMEUIINFO_MENU_FILES_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_FILES_TREE(tree)</programlisting>
<para>
A "Files" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-WINDOWS-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_WINDOWS_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-WINDOWS-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_WINDOWS_TREE">GNOMEUIINFO_MENU_WINDOWS_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_WINDOWS_TREE(tree)</programlisting>
<para>
A "Windows" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-HELP-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_HELP_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-HELP-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_HELP_TREE">GNOMEUIINFO_MENU_HELP_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_HELP_TREE(tree)</programlisting>
<para>
A "Help" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOMEUIINFO-MENU-GAME-TREE--CAPS" role="macro">
<title>GNOMEUIINFO_MENU_GAME_TREE()</title>
<indexterm zone="GNOMEUIINFO-MENU-GAME-TREE--CAPS"><primary sortas="GNOMEUIINFO_MENU_GAME_TREE">GNOMEUIINFO_MENU_GAME_TREE</primary></indexterm><programlisting>#define             GNOMEUIINFO_MENU_GAME_TREE(tree)</programlisting>
<para>
A "Game" menu tree.
</para><variablelist role="params">
<varlistentry><term><parameter>tree</parameter>&#160;:</term>
<listitem><simpara>Pointer to a tree containing menu items for inside this menu.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-FILE-STRING--CAPS" role="macro">
<title>GNOME_MENU_FILE_STRING</title>
<indexterm zone="GNOME-MENU-FILE-STRING--CAPS"><primary sortas="GNOME_MENU_FILE_STRING">GNOME_MENU_FILE_STRING</primary></indexterm><programlisting>#define GNOME_MENU_FILE_STRING D_("_File")
</programlisting>
<para>
A string which is the title of the "File" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-FILE-PATH--CAPS" role="macro">
<title>GNOME_MENU_FILE_PATH</title>
<indexterm zone="GNOME-MENU-FILE-PATH--CAPS"><primary sortas="GNOME_MENU_FILE_PATH">GNOME_MENU_FILE_PATH</primary></indexterm><programlisting>#define GNOME_MENU_FILE_PATH D_("_File/")
</programlisting>
<para>
A pre-defined path to the "File" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-EDIT-STRING--CAPS" role="macro">
<title>GNOME_MENU_EDIT_STRING</title>
<indexterm zone="GNOME-MENU-EDIT-STRING--CAPS"><primary sortas="GNOME_MENU_EDIT_STRING">GNOME_MENU_EDIT_STRING</primary></indexterm><programlisting>#define GNOME_MENU_EDIT_STRING D_("_Edit")
</programlisting>
<para>
A string which is the title of the "Edit" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-EDIT-PATH--CAPS" role="macro">
<title>GNOME_MENU_EDIT_PATH</title>
<indexterm zone="GNOME-MENU-EDIT-PATH--CAPS"><primary sortas="GNOME_MENU_EDIT_PATH">GNOME_MENU_EDIT_PATH</primary></indexterm><programlisting>#define GNOME_MENU_EDIT_PATH D_("_Edit/")
</programlisting>
<para>
A pre-defined path to the "Edit" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-EDIT-TREE--CAPS"><type>GNOMEUIINFO_MENU_EDIT_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-VIEW-STRING--CAPS" role="macro">
<title>GNOME_MENU_VIEW_STRING</title>
<indexterm zone="GNOME-MENU-VIEW-STRING--CAPS"><primary sortas="GNOME_MENU_VIEW_STRING">GNOME_MENU_VIEW_STRING</primary></indexterm><programlisting>#define GNOME_MENU_VIEW_STRING D_("_View")
</programlisting>
<para>
A string which is the title of the "View" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-VIEW-TREE--CAPS"><type>GNOMEUIINFO_MENU_VIEW_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-VIEW-PATH--CAPS" role="macro">
<title>GNOME_MENU_VIEW_PATH</title>
<indexterm zone="GNOME-MENU-VIEW-PATH--CAPS"><primary sortas="GNOME_MENU_VIEW_PATH">GNOME_MENU_VIEW_PATH</primary></indexterm><programlisting>#define GNOME_MENU_VIEW_PATH D_("_View/")
</programlisting>
<para>
A pre-defined path to the "View" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-SETTINGS-STRING--CAPS" role="macro">
<title>GNOME_MENU_SETTINGS_STRING</title>
<indexterm zone="GNOME-MENU-SETTINGS-STRING--CAPS"><primary sortas="GNOME_MENU_SETTINGS_STRING">GNOME_MENU_SETTINGS_STRING</primary></indexterm><programlisting>#define GNOME_MENU_SETTINGS_STRING D_("_Settings")
</programlisting>
<para>
A string which is the title of the "Settings" menu (when the menu is created
using <link linkend="GNOMEUIINFO-MENU-SETTINGS-TREE--CAPS"><type>GNOMEUIINFO_MENU_SETTINGS_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-SETTINGS-PATH--CAPS" role="macro">
<title>GNOME_MENU_SETTINGS_PATH</title>
<indexterm zone="GNOME-MENU-SETTINGS-PATH--CAPS"><primary sortas="GNOME_MENU_SETTINGS_PATH">GNOME_MENU_SETTINGS_PATH</primary></indexterm><programlisting>#define GNOME_MENU_SETTINGS_PATH D_("_Settings/")
</programlisting>
<para>
A pre-defined path to the "Settings" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-NEW-STRING--CAPS" role="macro">
<title>GNOME_MENU_NEW_STRING</title>
<indexterm zone="GNOME-MENU-NEW-STRING--CAPS"><primary sortas="GNOME_MENU_NEW_STRING">GNOME_MENU_NEW_STRING</primary></indexterm><programlisting>#define GNOME_MENU_NEW_STRING D_("_New")
</programlisting>
<para>
A string which is the title of the "New" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-NEW-TREE--CAPS"><type>GNOMEUIINFO_MENU_NEW_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-NEW-PATH--CAPS" role="macro">
<title>GNOME_MENU_NEW_PATH</title>
<indexterm zone="GNOME-MENU-NEW-PATH--CAPS"><primary sortas="GNOME_MENU_NEW_PATH">GNOME_MENU_NEW_PATH</primary></indexterm><programlisting>#define GNOME_MENU_NEW_PATH D_("_New/")
</programlisting>
<para>
A pre-defined path to the "New" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-FILES-STRING--CAPS" role="macro">
<title>GNOME_MENU_FILES_STRING</title>
<indexterm zone="GNOME-MENU-FILES-STRING--CAPS"><primary sortas="GNOME_MENU_FILES_STRING">GNOME_MENU_FILES_STRING</primary></indexterm><programlisting>#define GNOME_MENU_FILES_STRING D_("Fi_les")
</programlisting>
<para>
A string which is the title of the "Files" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILES-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILES_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-FILES-PATH--CAPS" role="macro">
<title>GNOME_MENU_FILES_PATH</title>
<indexterm zone="GNOME-MENU-FILES-PATH--CAPS"><primary sortas="GNOME_MENU_FILES_PATH">GNOME_MENU_FILES_PATH</primary></indexterm><programlisting>#define GNOME_MENU_FILES_PATH D_("Fi_les/")
</programlisting>
<para>
A pre-defined path to the "Files" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-WINDOWS-STRING--CAPS" role="macro">
<title>GNOME_MENU_WINDOWS_STRING</title>
<indexterm zone="GNOME-MENU-WINDOWS-STRING--CAPS"><primary sortas="GNOME_MENU_WINDOWS_STRING">GNOME_MENU_WINDOWS_STRING</primary></indexterm><programlisting>#define GNOME_MENU_WINDOWS_STRING D_("_Windows")
</programlisting>
<para>
A string which is the title of the "Windows" menu (when the menu is created
using <link linkend="GNOMEUIINFO-MENU-WINDOWS-TREE--CAPS"><type>GNOMEUIINFO_MENU_WINDOWS_TREE</type></link>).
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="GNOME-MENU-WINDOWS-PATH--CAPS" role="macro">
<title>GNOME_MENU_WINDOWS_PATH</title>
<indexterm zone="GNOME-MENU-WINDOWS-PATH--CAPS"><primary sortas="GNOME_MENU_WINDOWS_PATH">GNOME_MENU_WINDOWS_PATH</primary></indexterm><programlisting>#define GNOME_MENU_WINDOWS_PATH D_("_Windows/")
</programlisting>
<para>
A pre-defined path to the "Windows" menu (when the menu is created using
<link linkend="GNOMEUIINFO-MENU-FILE-TREE--CAPS"><type>GNOMEUIINFO_MENU_FILE_TREE</type></link>). Used in calls like <link linkend="gnome-app-find-menu-pos"><function>gnome_app_find_menu_pos()</function></link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>A <link linkend="GnomeUIInfo"><type>GnomeUIInfo</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gnome-app-helper-gettext" role="function">
<title>gnome_app_helper_gettext ()</title>
<indexterm zone="gnome-app-helper-gettext"><primary sortas="gnome_app_helper_gettext">gnome_app_helper_gettext</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gnome_app_helper_gettext            (const <link linkend="gchar">gchar</link> *string);</programlisting>
<para>
Translate <parameter>string</parameter> by calling <link linkend="gettext"><function>gettext()</function></link> and then, if that did not change the
string, <link linkend="dgettext"><function>dgettext()</function></link> with the domain set to libgnome's message domain.
</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&#160;:</term>
<listitem><simpara>The string to translate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>The localised value of the string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="L---CAPS" role="macro">
<title>L_()</title>
<indexterm zone="L---CAPS"><primary sortas="L_">L_</primary></indexterm><programlisting>#define             L_(x)</programlisting>
<para>
Syntactic sugar for <link linkend="gnome-app-helper-gettext"><function>gnome_app_helper_gettext()</function></link>.
</para><variablelist role="params">
<varlistentry><term><parameter>x</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="D---CAPS" role="macro">
<title>D_()</title>
<indexterm zone="D---CAPS"><primary sortas="D_">D_</primary></indexterm><programlisting>#define             D_(x)</programlisting>
<para>
Syntactic sugar for calling <link linkend="dgettext"><function>dgettext()</function></link> with the domain set to libgnome's message
domain.
</para><variablelist role="params">
<varlistentry><term><parameter>x</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
